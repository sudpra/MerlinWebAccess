package MFClient.Tests.Assignments;

import genericLibrary.DataProviderUtils;
import genericLibrary.EmailReport;
import genericLibrary.Log;
import genericLibrary.Utils;
import genericLibrary.WebDriverUtils;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;

import org.openqa.selenium.WebDriver;
import org.testng.Reporter;
import org.testng.SkipException;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;
import org.testng.xml.XmlTest;

import MFClient.Pages.HomePage;
import MFClient.Pages.LoginPage;
import MFClient.Wrappers.Caption;
import MFClient.Wrappers.ListView;
import MFClient.Wrappers.MetadataCard;
import MFClient.Wrappers.SearchPanel;
import MFClient.Wrappers.Utility;

@Listeners(EmailReport.class)
public class Assignments {

	public static String xlTestDataWorkBook = null;
	public static String loginURL = null;
	public static String configURL = null;
	public static String userName = null;
	public static String password = null;
	public static String testVault = null;
	public static String productVersion = null;
	public static WebDriver driver = null;
	public static String userFullName = null;
	public String methodName = null;
	public static String className = null;

	/**
	 * init : Before Class method to perform initial operations.
	 */
	@BeforeClass (alwaysRun=true)
	public void init() throws Exception {

		try {

			XmlTest xmlParameters = Reporter.getCurrentTestResult().getTestContext().getCurrentXmlTest();
			xlTestDataWorkBook = xmlParameters.getParameter("TestData");
			loginURL = xmlParameters.getParameter("webSite");
			userName = xmlParameters.getParameter("UserName");
			password = xmlParameters.getParameter("Password");
			testVault = xmlParameters.getParameter("VaultName");			
			userFullName = xmlParameters.getParameter("UserFullName");
			className = this.getClass().getSimpleName().toString().trim();
			if (xmlParameters.getParameter("driverType").equalsIgnoreCase("IE"))
				productVersion = "M-Files " + xmlParameters.getParameter("productVersion").trim() + " - " + xmlParameters.getParameter("driverType").toUpperCase().trim() + xmlParameters.getParameter("driverVersion").trim();
			else
				productVersion = "M-Files " + xmlParameters.getParameter("productVersion").trim() + " - " + xmlParameters.getParameter("driverType").toUpperCase().trim();

			Utility.restoreTestVault();
			Utility.configureUsers(xlTestDataWorkBook);

		} //End try

		catch(Exception e) {
			if (e instanceof SkipException) 
				throw new SkipException(e.getMessage());
			else if (e.getClass().toString().contains("NullPointerException")) 
				throw new Exception ("Test data sheet does not exists.");
			else
				throw e;
		} //End catch

	} //End init

	/**
	 * quitDriver: Quits the driver after the method
	 * @throws Exception
	 */
	@AfterMethod (alwaysRun = true)
	public void quitDriver() throws Exception{

		try {

			if (driver != null)//Checks if driver is not equals to null
				driver.quit();//Quits the driver

			Log.endTestCase();//Ends the test case

		}//End try

		catch(Exception e){
			throw e;
		}//End Catch
	}//End quitDriver

	/**
	 * getMethodName : Gets the name of current executing method
	 */
	@BeforeMethod (alwaysRun=true)
	public void getMethodName(Method method) throws Exception {

		try {

			methodName = method.getName();

		} //End try

		catch(Exception e) {
			if (e.getClass().toString().contains("NullPointerException")) 
				throw new Exception ("Test data sheet does not exists.");
			else
				throw e;
		} //End catch		
	} //End getMethodName

	/**
	 * cleanApp : At after class method to destroy the vault used in the class
	 */
	@AfterClass (alwaysRun = true)
	public void cleanApp() throws Exception{

		try {

			Utility.destroyUsers(xlTestDataWorkBook);
			Utility.destroyTestVault();

		}//End try

		catch(Exception e){
			throw e;
		}//End Catch
	}//End cleanApp

	/**
	 * 104.1.1A : Verify if Mark complete icon is displayed in Metadata card for Single assignee - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Mark complete icon is displayed in Metadata card for Single assignee - Context menu Properties")
	public void SprintTest104_1_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (!metadatacard.isAssignmentCompleted())
				Log.pass("Test case Passed. Mark Complete Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Complete Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_1A

	/**
	 * 104.1.1B : Verify if Mark complete icon is displayed in Metadata card for Single assignee - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Mark complete icon is displayed in Metadata card for Single assignee - Operations menu Properties")
	public void SprintTest104_1_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (!metadatacard.isAssignmentCompleted())
				Log.pass("Test case Passed. Mark Complete Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Complete Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_1B

	/**
	 * 104.1.1C : Verify if Mark complete icon is displayed in Metadata card for Single assignee - Taskpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Mark complete icon is displayed in Metadata card for Single assignee - Taskpane Properties")
	public void SprintTest104_1_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpane.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (!metadatacard.isAssignmentCompleted())
				Log.pass("Test case Passed. Mark Complete Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Complete Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_1C

	/**
	 * 104.1.1D : Verify if Mark complete icon is displayed in Metadata card for Single assignee - Right pane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Mark complete icon is displayed in Metadata card for Single assignee - Right pane")
	public void SprintTest104_1_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through rightpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (!metadatacard.isAssignmentCompleted())
				Log.pass("Test case Passed. Mark Complete Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Complete Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_1D

	/**
	 * 104.1.2A : Verify if assignment can be marked as complete - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Context menu Properties")
	public void SprintTest104_1_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			Log.message("4. Mark complete icon is selected.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (metadatacard.isAssignmentCompleted()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mark Completed Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Completed Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_2A

	/**
	 * 104.1.2B : Verify if assignment can be marked as complete - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Operations menu Properties")
	public void SprintTest104_1_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			Log.message("4. Mark complete icon is selected.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (metadatacard.isAssignmentCompleted()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mark Completed Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Completed Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_2B

	/**
	 * 104.1.2C : Verify if assignment can be marked as complete - Taskpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Taskpane Properties")
	public void SprintTest104_1_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpane.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			Log.message("4. Mark complete icon is selected.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (metadatacard.isAssignmentCompleted()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mark Completed Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Completed Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_2C

	/**
	 * 104.1.2D : Verify if assignment can be marked as complete - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Rightpane Properties")
	public void SprintTest104_1_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through rightpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			Log.message("4. Mark complete icon is selected.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (metadatacard.isAssignmentCompleted()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mark Completed Icon is displayed in metadatacard.");
			else
				Log.fail("Test case Failed. Mark Completed Icon is not displayed in metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_2D

	/**
	 * 104.1.22A : Verify if user able to save assignment object with newly added property with empty value in metadata card - New menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if user able to save assignment object with newly added property with empty value in metadata card - New menu")
	public void SprintTest104_1_22A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.addNewProperty(dataPool.get("PropertyToAdd")); //Adds the property
			ConcurrentHashMap <String, String> prevInfo = metadatacard.getInfo(); //Gets the property information
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New property (" + dataPool.get("PropertyToAdd") + ") with empty value is added to assignment metadatacard and saved.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			ConcurrentHashMap <String, String> currInfo = metadatacard.getInfo(); //Gets the property information

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Verification : Verifies if assignment metadatacard with empty property value is saved successfully
			//---------------------------------------------------------------------------------------------------
			if (Utility.compareObjects(prevInfo, currInfo).equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment metadatacard with empty property value is saved successfully.");
			else
				Log.fail("Test case Failed. Assignment metadatacard with empty property value is not saved successfully.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_22A

	/**
	 * 104.1.22B : Verify if user able to save assignment object with newly added property with empty value in metadata card - Taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if user able to save assignment object with newly added property with empty value in metadata card - Taskpanel")
	public void SprintTest104_1_22B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from taskpane
			//--------------------------------------------
			homePage.taskPanel.clickItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from taskpanel.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.addNewProperty(dataPool.get("PropertyToAdd")); //Adds the property
			ConcurrentHashMap <String, String> prevInfo = metadatacard.getInfo(); //Gets the property information
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New property (" + dataPool.get("PropertyToAdd") + ") with empty value is added to assignment metadatacard and saved.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			ConcurrentHashMap <String, String> currInfo = metadatacard.getInfo(); //Gets the property information

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Verification : Verifies if assignment metadatacard with empty property value is saved successfully
			//---------------------------------------------------------------------------------------------------
			if (Utility.compareObjects(prevInfo, currInfo).equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment metadatacard with empty property value is saved successfully.");
			else
				Log.fail("Test case Failed. Assignment metadatacard with empty property value is not saved successfully.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_22B

	/**
	 * 104.1.22C : Verify if user able to save assignment object with newly added property with filled value in metadata card - New menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if user able to save assignment object with newly added property with filled value in metadata card - New menu")
	public void SprintTest104_1_22C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.addNewProperty(dataPool.get("PropertyToAdd")); //Adds the property
			metadatacard.setPropertyValue(dataPool.get("PropertyToAdd"), dataPool.get("PropertyValue")); //Sets the new property
			ConcurrentHashMap <String, String> prevInfo = metadatacard.getInfo(); //Gets the property information
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New property (" + dataPool.get("PropertyToAdd") + ") with value filled is added to assignment metadatacard and saved.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			ConcurrentHashMap <String, String> currInfo = metadatacard.getInfo(); //Gets the property information

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Verification : Verifies if assignment metadatacard with empty property value is saved successfully
			//---------------------------------------------------------------------------------------------------
			if (Utility.compareObjects(prevInfo, currInfo).equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment metadatacard with empty property value is saved successfully.");
			else
				Log.fail("Test case Failed. Assignment metadatacard with empty property value is not saved successfully.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_22C

	/**
	 * 104.1.22D : Verify if user able to save assignment object with newly added property with filled value in metadata card - Taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if user able to save assignment object with newly added property with filled value in metadata card - Taskpanel")
	public void SprintTest104_1_22D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from taskpanel
			//--------------------------------------------
			homePage.taskPanel.clickItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from taskpanel.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.addNewProperty(dataPool.get("PropertyToAdd")); //Adds the property
			metadatacard.setPropertyValue(dataPool.get("PropertyToAdd"), dataPool.get("PropertyValue")); //Sets the new property
			ConcurrentHashMap <String, String> prevInfo = metadatacard.getInfo(); //Gets the property information
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New property (" + dataPool.get("PropertyToAdd") + ") with value filled is added to assignment metadatacard and saved.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			ConcurrentHashMap <String, String> currInfo = metadatacard.getInfo(); //Gets the property information

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Verification : Verifies if assignment metadatacard with empty property value is saved successfully
			//---------------------------------------------------------------------------------------------------
			if (Utility.compareObjects(prevInfo, currInfo).equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment metadatacard with empty property value is saved successfully.");
			else
				Log.fail("Test case Failed. Assignment metadatacard with empty property value is not saved successfully.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_22D

	/**
	 * 104.1.23A : Verify if one assignee can be marked as complete for Assignment objects - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if one assignee can be marked as complete for Assignment objects - Context menu Properties")
	public void SprintTest104_1_23A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			driver.switchTo().defaultContent();

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected.");

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment (" + assigName + ") is marked as completed.");
			else
				Log.fail("Test case Failed. Assignment (" + assigName + ") is not marked as completed.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_23A

	/**
	 * 104.1.23B : Verify if one assignee can be marked as complete for Assignment objects - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if one assignee can be marked as complete for Assignment objects - Operations menu Properties")
	public void SprintTest104_1_23B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, "");

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected.");

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment (" + assigName + ") is marked as completed.");
			else
				Log.fail("Test case Failed. Assignment (" + assigName + ") is not marked as completed.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_23B

	/**
	 * 104.1.23C : Verify if one assignee can be marked as complete for Assignment objects - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if one assignee can be marked as complete for Assignment objects - Taskpanel Properties")
	public void SprintTest104_1_23C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, "");

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from task panel

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through task panel.");

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected.");

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment (" + assigName + ") is marked as completed.");
			else
				Log.fail("Test case Failed. Assignment (" + assigName + ") is not marked as completed.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_23C

	/**
	 * 104.1.23D : Verify if one assignee can be marked as complete for Assignment objects - Right pane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if one assignee can be marked as complete for Assignment objects - Right pane Properties")
	public void SprintTest104_1_23D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through rightpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, "");

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.");

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected.");

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment (" + assigName + ") is marked as completed.");
			else
				Log.fail("Test case Failed. Assignment (" + assigName + ") is not marked as completed.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_23D

	/**
	 * 104.1.23E : Verify if one assignee can be marked as complete for Assignment objects - Taskpanel Mark Complete
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if one assignee can be marked as complete for Assignment objects - Taskpanel Mark Complete")
	public void SprintTest104_1_23E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentBasicClass.Value); //Sets the class
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, "");

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel 

			Log.message("4. New assignment (" + assigName + ") is selected and Mark Complete is clicked through task panel.");

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment (" + assigName + ") is marked as completed.");
			else
				Log.fail("Test case Failed. Assignment (" + assigName + ") is not marked as completed.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_23E

	/**
	 * 104.1.24.1A : Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Context menu Properties")
	public void SprintTest104_1_24_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotRejectedDisplayed()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Not Approved and Not Rejected buttons are displayed in metadatacard..");
			else
				Log.fail("Test case Failed. Not Approved or Not Rejected buttons is not displayed in metadatacard..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_1A

	/**
	 * 104.1.24.1B : Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Operations menu Properties")
	public void SprintTest104_1_24_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Verification : Verifies if Not Approved and Not Rejected button gets displayed
			//------------------------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotRejectedDisplayed()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Not Approved and Not Rejected buttons are displayed in metadatacard..");
			else
				Log.fail("Test case Failed. Not Approved or Not Rejected buttons is not displayed in metadatacard..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_1B

	/**
	 * 104.1.24.1C : Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Taskpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Taskpane Properties")
	public void SprintTest104_1_24_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through Taskpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpane.");

			//Verification : Verifies if Not Approved and Not Rejected button gets displayed
			//------------------------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotRejectedDisplayed()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Not Approved and Not Rejected buttons are displayed in metadatacard..");
			else
				Log.fail("Test case Failed. Not Approved or Not Rejected buttons is not displayed in metadatacard..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_1C

	/**
	 * 104.1.24.1D : Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Not Approved and Not Rejected buttons should be displayed after selecting assigned to user in metadatacard - Rightpane Properties")
	public void SprintTest104_1_24_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through Taskpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.");

			//Verification : Verifies if Not Approved and Not Rejected button gets displayed
			//------------------------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotRejectedDisplayed()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Not Approved and Not Rejected buttons are displayed in metadatacard..");
			else
				Log.fail("Test case Failed. Not Approved or Not Rejected buttons is not displayed in metadatacard..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_1D

	/**
	 * 104.1.24.1E : Not Approved and Not Rejected buttons should be available in taskpanel after selecting assignment from listview.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Not Approved and Not Rejected buttons should be available in taskpanel after selecting assignment from listview.")
	public void SprintTest104_1_24_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through Taskpane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.");

			//Verification : Verifies if Not Approved and Not Rejected button gets displayed
			//------------------------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotRejectedDisplayed()) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Not Approved and Not Rejected buttons are displayed in metadatacard..");
			else
				Log.fail("Test case Failed. Not Approved or Not Rejected buttons is not displayed in metadatacard..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_1E

	/**
	 * 104.1.24.2A : Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - context menu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - context menu properties")
	public void SprintTest104_1_24_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("4. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-5 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard1 = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-6 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard1.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("6. Approve icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard1.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not approved in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_2A

	/**
	 * 104.1.24.2B : Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - operations menu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - operations menu properties")
	public void SprintTest104_1_24_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("4. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-5 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.", driver);

			//Step-6 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("6. Approve icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not approved in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_2B

	/**
	 * 104.1.24.2C : Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - taskpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - taskpane properties")
	public void SprintTest104_1_24_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through taskpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through taskpane.", driver);

			//Step-5 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("5. Approve icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not approved in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_2C

	/**
	 * 104.1.24.2D : Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - Rightpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Approve it by assigned user in metadatacard - Rightpane properties")
	public void SprintTest104_1_24_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through rightpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.", driver);

			//Step-5 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("5. Approve icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not approved in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_2D

	/**
	 * 104.1.24.2E : Create assignment by assigning it to other user and Approve it by assigned user from taskpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Approve it by assigned user from taskpane")
	public void SprintTest104_1_24_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through taskpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel //Selects Properties from context menu

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through taskpane.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not approved in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_2E

	/**
	 * 104.1.24.3A : Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - context menu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - context menu properties")
	public void SprintTest104_1_24_3A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");


			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-5 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("5. Reject icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not rejected in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_3A

	/**
	 * 104.1.24.3B : Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - context menu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - context menu properties")
	public void SprintTest104_1_24_3B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.", driver);

			//Step-5 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("5. Reject icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not rejected in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_3B

	/**
	 * 104.1.24.3C : Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - taskpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - taskpane properties")
	public void SprintTest104_1_24_3C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through taskpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel.", driver);

			//Step-5 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("5. Reject icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not rejected in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_3C

	/**
	 * 104.1.24.3D : Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - rightpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Reject it by assigned user in metadatacard - rightpane properties")
	public void SprintTest104_1_24_3D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through rightpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.", driver);

			//Step-5 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("5. Reject icon in the Assignment is clicked.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not rejected in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_3D

	/**
	 * 104.1.24.3E : Create assignment by assigning it to other user and Reject it by assigned user from taskpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Create assignment by assigning it to other user and Reject it by assigned user from taskpane")
	public void SprintTest104_1_24_3E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName")); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with new user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through rightpane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Reject"); //Selects Properties from context menu

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through rightpane.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------

			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(dataPool.get("UserFullName"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected in metadatacard properties.");
			else
				Log.fail("Test case Failed. Assignment is not rejected in metadatacard properties.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_3E

	/**
	 * 104.1.24.4A : Approved assignee should be listed below when there are more assigned to users - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignee should be listed below when there are more assigned to users - Context menu Properties")
	public void SprintTest104_1_24_4A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with first user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName1"), dataPool.get("Password1"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName1") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			System.out.println(metadatacard.getPropertyValue("Class"));
			if (!metadatacard.clickApproveIcon(0)) //Clicks Approve Icon of the first user.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected and assignment is saved.");

			//Step-6 : Open the Properties of the assignment through context menu and get the order of completed assignment
			//-------------------------------------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("6. Properties dialog of the assignment (" + assigName + ") is opened through context menu.", driver);

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (!metadatacard.getPropertyValue("Assigned to", 3).equalsIgnoreCase(dataPool.get("UserFullName1")))
				throw new Exception("Test case Failed. Approved user is not moved as last value in the assigned to property");

			if (!metadatacard.isApprovedSelected(2) && !metadatacard.isRejectedSelected(2))
				throw new Exception("Test case Failed.User (" + dataPool.get("UserFullName1") + ") status is not in approved status after approval.");

			if (!metadatacard.isApprovedSelected(0)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is not in approved or rejected state.");
			else
				Log.fail("Test case Failed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is in approved or rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_4A

	/**
	 * 104.1.24.4B : Approved assignee should be listed below when there are more assigned to users - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignee should be listed below when there are more assigned to users - Operations menu Properties")
	public void SprintTest104_1_24_4B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with first user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName1"), dataPool.get("Password1"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName1") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through operations menu
			//---------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.", driver);

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			System.out.println(metadatacard.getPropertyValue("Class"));
			if (!metadatacard.clickApproveIcon(0)) //Clicks Approve Icon of the first user.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected and assignment is saved.");

			//Step-6 : Open the Properties of the assignment through context menu and get the order of completed assignment
			//-------------------------------------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("6. Properties dialog of the assignment (" + assigName + ") is opened through operations menu.", driver);

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (!metadatacard.getPropertyValue("Assigned to", 3).equalsIgnoreCase(dataPool.get("UserFullName1")))
				throw new Exception("Test case Failed. Approved user is not moved as last value in the assigned to property");

			if (!metadatacard.isApprovedSelected(2) && !metadatacard.isRejectedSelected(2))
				throw new Exception("Test case Failed.User (" + dataPool.get("UserFullName1") + ") status is not in approved status after approval.");

			if (!metadatacard.isApprovedSelected(0)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is not in approved or rejected state.");
			else
				Log.fail("Test case Failed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is in approved or rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_4B

	/**
	 * 104.1.24.4C : Approved assignee should be listed below when there are more assigned to users - Taskpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignee should be listed below when there are more assigned to users - Taskpane Properties")
	public void SprintTest104_1_24_4C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with first user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName1"), dataPool.get("Password1"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName1") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through taskpanel
			//---------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel.", driver);

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			System.out.println(metadatacard.getPropertyValue("Class"));

			if (!metadatacard.clickApproveIcon(0)) //Clicks Approve Icon of the first user.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected and assignment is saved.");

			//Step-6 : Open the Properties of the assignment through context menu and get the order of completed assignment
			//-------------------------------------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("6. Properties dialog of the assignment (" + assigName + ") is opened through taskpanel.", driver);

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (!metadatacard.getPropertyValue("Assigned to", 3).equalsIgnoreCase(dataPool.get("UserFullName1")))
				throw new Exception("Test case Failed. Approved user is not moved as last value in the assigned to property");

			if (!metadatacard.isApprovedSelected(2) && !metadatacard.isRejectedSelected(2))
				throw new Exception("Test case Failed.User (" + dataPool.get("UserFullName1") + ") status is not in approved status after approval.");

			if (!metadatacard.isApprovedSelected(0)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is not in approved or rejected state.");
			else
				Log.fail("Test case Failed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is in approved or rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_4C

	/**
	 * 104.1.24.4D : Approved assignee should be listed below when there are more assigned to users - Right pane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignee should be listed below when there are more assigned to users - Right pane Properties")
	public void SprintTest104_1_24_4D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Logout and login with first user
			//--------------------------------------
			if (!Utility.logOut(driver)) //Logs out from the vault
				throw new Exception("Logout is not successful");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName1"), dataPool.get("Password1"), testVault); //Launched driver and logged in

			Log.message("3. Logged out and logged in with new user (" + dataPool.get("UserName1") + ").");

			//Step-4 : Open the Properties dialog of the new assignment through taskpanel
			//---------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.", driver);

			//Step-5 : Mark Complete the newly created assignment
			//----------------------------------------------------
			System.out.println(metadatacard.getPropertyValue("Class"));
			if (!metadatacard.clickApproveIcon(0)) //Clicks Approve Icon of the first user.
				throw new Exception("Mark Complete icon is not clicked.");

			metadatacard.saveAndClose(); //Clicked Save button in metadatacard.

			Log.message("5. Mark complete icon is selected and assignment is saved.");

			//Step-6 : Open the Properties of the assignment through context menu and get the order of completed assignment
			//-------------------------------------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("6. Properties dialog of the assignment (" + assigName + ") is opened in right pane.", driver);

			//Verification : Verifies if Assignment is mark completed
			//----------------------------------------------------------
			if (!metadatacard.getPropertyValue("Assigned to", 3).equalsIgnoreCase(dataPool.get("UserFullName1")))
				throw new Exception("Test case Failed. Approved user is not moved as last value in the assigned to property");

			if (!metadatacard.isApprovedSelected(2) && !metadatacard.isRejectedSelected(2))
				throw new Exception("Test case Failed.User (" + dataPool.get("UserFullName1") + ") status is not in approved status after approval.");

			if (!metadatacard.isApprovedSelected(0)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is not in approved or rejected state.");
			else
				Log.fail("Test case Failed. Assignment with user (" + dataPool.get("UserFullName1") + ") at the top is in approved or rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_4D

	/**
	 * 104.1.24.5A : Approve and Reject icon should be available for all the assigned users - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve and Reject icon should be available for all the assigned users - Context menu Properties")
	public void SprintTest104_1_24_5A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Verification : Verifies if Approve and Reject icon is available for all users
			//------------------------------------------------------------------------------
			Boolean isApproveDisplayed = metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(1) && metadatacard.isNotApprovedDisplayed(2); 
			Boolean isRejectDisplayed = metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(1) && metadatacard.isNotRejectedDisplayed(2);

			if (isApproveDisplayed && isRejectDisplayed) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icon is displayed for all users.", driver);
			else
				Log.fail("Test case Failed. Approved and Rejected icon is not displayed for all users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_5A

	/**
	 * 104.1.24.5B : Approve and Reject icon should be available for all the assigned users - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve and Reject icon should be available for all the assigned users - Operations menu Properties")
	public void SprintTest104_1_24_5B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through oeprations menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.", driver);

			//Verification : Verifies if Approve and Reject icon is available for all users
			//------------------------------------------------------------------------------
			Boolean isApproveDisplayed = metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(1) && metadatacard.isNotApprovedDisplayed(2); 
			Boolean isRejectDisplayed = metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(1) && metadatacard.isNotRejectedDisplayed(2);

			if (isApproveDisplayed && isRejectDisplayed) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icon is displayed for all users.", driver);
			else
				Log.fail("Test case Failed. Approved and Rejected icon is not displayed for all users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_5B

	/**
	 * 104.1.24.5C : Approve and Reject icon should be available for all the assigned users - Taskpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve and Reject icon should be available for all the assigned users - Taskpane Properties")
	public void SprintTest104_1_24_5C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel.", driver);

			//Verification : Verifies if Approve and Reject icon is available for all users
			//------------------------------------------------------------------------------
			Boolean isApproveDisplayed = metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(1) && metadatacard.isNotApprovedDisplayed(2); 
			Boolean isRejectDisplayed = metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(1) && metadatacard.isNotRejectedDisplayed(2);

			if (isApproveDisplayed && isRejectDisplayed) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icon is displayed for all users.", driver);
			else
				Log.fail("Test case Failed. Approved and Rejected icon is not displayed for all users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_5C

	/**
	 * 104.1.24.5D : Approve and Reject icon should be available for all the assigned users - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve and Reject icon should be available for all the assigned users - Rightpane Properties")
	public void SprintTest104_1_24_5D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName3"), 3); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel.", driver);

			//Verification : Verifies if Approve and Reject icon is available for all users
			//------------------------------------------------------------------------------
			Boolean isApproveDisplayed = metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(1) && metadatacard.isNotApprovedDisplayed(2); 
			Boolean isRejectDisplayed = metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(1) && metadatacard.isNotRejectedDisplayed(2);

			if (isApproveDisplayed && isRejectDisplayed) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icon is displayed for all users.", driver);
			else
				Log.fail("Test case Failed. Approved and Rejected icon is not displayed for all users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_24_5D

	/**
	 * 104.1.32.1A : Verify if Approve option is removed in task pane when user perform Approve operation - Context meu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve option is removed in task pane when user perform Approve operation - Context meu properties")
	public void SprintTest104_1_32_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-5 : Approve the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Approve Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not approved in metadatacard properties.");

			Log.message("5. Assignment is approved in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
				Log.pass("Test case Passed. Approve is not displayed in taskpane after approving the assignment.");
			else
				Log.fail("Test case Failed. Approve is getting displayed after approving the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_1A

	/**
	 * 104.1.32.1B : Verify if Approve option is removed in task pane when user perform Approve operation - Operations meu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve option is removed in task pane when user perform Approve operation - Operations meu properties")
	public void SprintTest104_1_32_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-5 : Approve the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Approve Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not approved in metadatacard properties.");

			Log.message("5. Assignment is approved in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
				Log.pass("Test case Passed. Approve is not displayed in taskpane after approving the assignment.");
			else
				Log.fail("Test case Failed. Approve is getting displayed after approving the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_1B

	/**
	 * 104.1.32.1C : Verify if Approve option is removed in task pane when user perform Approve operation - Taskpanel properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve option is removed in task pane when user perform Approve operation - Taskpanel properties")
	public void SprintTest104_1_32_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through taskpanel
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel.", driver);

			//Step-5 : Approve the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Approve Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not approved in metadatacard properties.");

			Log.message("5. Assignment is approved in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
				Log.pass("Test case Passed. Approve is not displayed in taskpane after approving the assignment.");
			else
				Log.fail("Test case Failed. Approve is getting displayed after approving the assignment.", driver);

		} //End try
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_1C

	/**
	 * 104.1.32.1D : Verify if Approve option is removed in task pane when user perform Approve operation - Rightpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve option is removed in task pane when user perform Approve operation - Rightpane properties")
	public void SprintTest104_1_32_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through taskpanel
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.", driver);

			//Step-5 : Approve the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Approve Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not approved in metadatacard properties.");

			Log.message("5. Assignment is approved in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
				Log.pass("Test case Passed. Approve is not displayed in taskpane after approving the assignment.");
			else
				Log.fail("Test case Failed. Approve is getting displayed after approving the assignment.", driver);

		} //End try
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_1D

	/**
	 * 104.1.32.1E : Verify if Approve option is removed in task pane after approving assignment through taskpanel.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve option is removed in task pane after approving assignment through taskpanel.")
	public void SprintTest104_1_32_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Approve the assignment in taskapanel
			//-------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel //Clicks Approve from taskpanel

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not approved in metadatacard properties.");

			Log.message("4. Assignment is approved from taskpanel.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
				Log.pass("Test case Passed. Approve is not displayed in taskpane after approving the assignment.");
			else
				Log.fail("Test case Failed. Approve is getting displayed after approving the assignment.", driver);

		} //End try
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_1E

	/**
	 * 104.1.32.2A : Verify if Reject option is removed in task pane when user perform Reject operation - Context meu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject option is removed in task pane when user perform Reject operation - Context meu properties")
	public void SprintTest104_1_32_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.", driver);

			//Step-5 : Reject the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Reject Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not rejected in metadatacard properties.");

			Log.message("5. Assignment is rejected in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
				Log.pass("Test case Passed. Reject is not displayed in taskpane after rejecting the assignment.");
			else
				Log.fail("Test case Failed. Reject is getting displayed after rejecting the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_2A

	/**
	 * 104.1.32.2B : Verify if Reject option is removed in task pane when user perform Reject operation - Operations meu properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject option is removed in task pane when user perform Reject operation - Operations meu properties")
	public void SprintTest104_1_32_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through operations menu
			//---------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.", driver);

			//Step-5 : Reject the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Reject Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not rejected in metadatacard properties.");

			Log.message("5. Assignment is rejected in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
				Log.pass("Test case Passed. Reject is not displayed in taskpane after rejecting the assignment.");
			else
				Log.fail("Test case Failed. Reject is getting displayed after rejecting the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_2B

	/**
	 * 104.1.32.2C : Verify if Reject option is removed in task pane when user perform Reject operation - Taskpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject option is removed in task pane when user perform Reject operation - Taskpane properties")
	public void SprintTest104_1_32_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through taskpane
			//---------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpane

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through taskpane.", driver);

			//Step-5 : Reject the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Reject Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not rejected in metadatacard properties.");

			Log.message("5. Assignment is rejected in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
				Log.pass("Test case Passed. Reject is not displayed in taskpane after rejecting the assignment.");
			else
				Log.fail("Test case Failed. Reject is getting displayed after rejecting the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_2C

	/**
	 * 104.1.32.2D : Verify if Reject option is removed in task pane when user perform Reject operation - Rightpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject option is removed in task pane when user perform Reject operation - Rightpane properties")
	public void SprintTest104_1_32_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Open the Properties dialog of the new assignment through rightpane
			//---------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Taskpanel.AssignedToMe.Value, ""); //Navigates to Assigned to me view

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in Assigned to me view.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");


			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.", driver);

			//Step-5 : Reject the assignment in metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Approve icon in metadatacard
				throw new Exception("Reject Icon is not clicked.");

			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not rejected in metadatacard properties.");

			Log.message("5. Assignment is rejected in metadatacard properties.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
				Log.pass("Test case Passed. Reject is not displayed in taskpane after rejecting the assignment.");
			else
				Log.fail("Test case Failed. Reject is getting displayed after rejecting the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_2D

	/**
	 * 104.1.32.2E : Verify if Approve option is removed in task pane after approving assignment through taskpanel.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject option is removed in task pane when user perform Reject operation - Rightpane properties")
	public void SprintTest104_1_32_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. New Assignment metadatacard is opened from New menu.");

			//Step-3 : Add new property with empty value to metadatacard
			//----------------------------------------------------------
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			if (!metadatacard.isNotApprovedDisplayed() || !metadatacard.isNotRejectedDisplayed())
				throw new Exception("Not Approved or Not Rejected icon is not displayed in metadata after selecting assigned to user.");

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment details are entered and saved the metadatacard.");

			//Step-4 : Approve the assignment in taskapanel
			//-------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel//Clicks Approve from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignment is not rejected in metadatacard properties.");

			Log.message("4. Assignment is rejected from taskpanel.", driver);

			//Verification : To verify if Approve is not displayed in taskpanel
			//--------------------------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
				Log.pass("Test case Passed. Reject is not displayed in taskpane after rejecting the assignment.");
			else
				Log.fail("Test case Failed. Reject is getting displayed after rejecting the assignment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_32_2E

	/**
	 * 104.1.33.1A : Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Context menu Properties")
	public void SprintTest104_1_33_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			///Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in right pane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.listView.rightClickItemByIndex(rand-1); //Right clicks the item
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through context menu.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_1A

	/**
	 * 104.1.33.1B : Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Operations menu Properties")
	public void SprintTest104_1_33_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in right pane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through operations menu.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_1B

	/**
	 * 104.1.33.1C : Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Taskpanel Properties")
	public void SprintTest104_1_33_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in right pane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through taskpanel.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_1C

	/**
	 * 104.1.33.1D : Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Rightpane Properties")
	public void SprintTest104_1_33_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in right pane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened in rightpane.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_1D

	/**
	 * 104.1.33.1E : Verify if Reject text is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user in taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject text is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user in taskpanel")
	public void SprintTest104_1_33_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in right pane
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key

			Log.message("2. Assignments are multi selected using SHIFT key.", driver);

			//Step-3 : Click Reject button in the taskpanel
			//-------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject");

			Log.message("3. Reject is clicked in taskpanel for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_1E

	/**
	 * 104.1.33.2A : Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Context menu Properties")
	public void SprintTest104_1_33_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in context menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.listView.rightClickItemByIndex(rand-1); //Right clicks the item
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through context menu.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getMarkedAsCompleteByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_2A

	/**
	 * 104.1.33.2B : Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Operations menu Properties")
	public void SprintTest104_1_33_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in operations menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through operations menu.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getMarkedAsCompleteByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_2B

	/**
	 * 104.1.33.2C : Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Taskpanel Properties")
	public void SprintTest104_1_33_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in taskpanel menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through taskpanel.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getMarkedAsCompleteByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_2C

	/**
	 * 104.1.33.2D : Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  - Rightpane Properties")
	public void SprintTest104_1_33_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in taskpanel menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened in rightpane.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getMarkedAsCompleteByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_2D

	/**
	 * 104.1.33.2E : Verify if Approve is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  in taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve is displayed for multiselected  assignment (SHIFT key) object that is assigneed to logged in user  in taskpanel")
	public void SprintTest104_1_33_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int rand = Utility.getRandomNumber(2, 5);
			String[] assignName = new String[rand];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<rand; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New " + rand + "Assignments are created.");

			//Step-2 : Open the Properties dialog of the new assignments in taskpanel menu
			//------------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key

			Log.message("2. Assignments are multi selected using SHIFT key.", driver);

			//Step-3 : Click Reject button in the taskpanel
			//-------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve");

			Log.message("3. Approve is clicked in taskpanel for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			String strDiff = "";

			for (int i=0; i<rand; i++) 
				if (!ListView.getMarkedAsCompleteByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_2E

	/**
	 * 104.1.33.3A : Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Context menu Properties")
	public void SprintTest104_1_33_3A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through context menu
			//--------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through context menu.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_3A

	/**
	 * 104.1.33.3B : Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Operations menu Properties")
	public void SprintTest104_1_33_3B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through operations menu
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through operations menu.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_3B

	/**
	 * 104.1.33.3C : Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Taskpanel Properties")
	public void SprintTest104_1_33_3C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through taskpanel menu
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through taskpanel.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_3C

	/**
	 * 104.1.33.3D : Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Rightpane Properties")
	public void SprintTest104_1_33_3D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through in rightpane
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened in rightpane.", driver);

			//Step-3 : Click Reject button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Reject icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_3D

	/**
	 * 104.1.33.3E : Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user in taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Reject icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user in taskpanel")
	public void SprintTest104_1_33_3E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Multi-Select the assignments
			//-------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key

			Log.message("2. Assignments are multi-selected using CTRL key.", driver);

			//Step-3 : Click Reject button in the taskpanel
			//-------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			Log.message("3. Reject button is selected in taskpanel for multi-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are rejected.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not rejected. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_3E

	/**
	 * 104.1.33.4A : Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Context menu Properties")
	public void SprintTest104_1_33_4A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through operations menu
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through context menu.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_4A

	/**
	 * 104.1.33.4B : Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Operations menu Properties")
	public void SprintTest104_1_33_4B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through operations menu
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through operations menu.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_4B

	/**
	 * 104.1.33.4C : Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - taskpanel properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - taskpanel Properties")
	public void SprintTest104_1_33_4C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through taskpanel menu
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through taskpanel.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_4C

	/**
	 * 104.1.33.4D : Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Rightpane properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user  - Rightpane Properties")
	public void SprintTest104_1_33_4D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Open the Properties dialog of the assignment through operations menu
			//-----------------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened in rightpane.", driver);

			//Step-3 : Click Approve button in the metadatacard
			//-------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Reject Icon is not clicked.");

			Log.message("3. Approve icon in the Assignment is clicked in metadatacard for mutli-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.

			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_4D

	/**
	 * 104.1.33.4E : Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user in taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if Approve icon is displayed for multiselected  assignment (CTRL key) object that is assigneed to logged in user in taskpanel")
	public void SprintTest104_1_33_4E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			int noOfItems = Utility.getRandomNumber(2, 10);
			String[] assignName = new String[noOfItems];
			String objName = Utility.getObjectName(methodName).toString();

			for (int i=0; i<noOfItems; i++) {
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				assignName[i] =  objName + "_" + i; //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assignName[i]); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
			}

			Log.message("1. New Assignments are created with two assigned to users.");

			//Step-2 : Multi-Select the assignments
			//---------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, objName);
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key

			Log.message("2. Assignments are multi-selected using CTRL key.", driver);

			//Step-3 : Click Approve button in the taskpanel
			//-------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel

			Log.message("3. Approve button is selected in taskpanel for multi-selected assignments.", driver);

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			String strDiff = "";

			for (int i=0; i<noOfItems; i++) 
				if (!ListView.getRejectedByItemIndex(driver, i).equalsIgnoreCase(userFullName))
					strDiff = strDiff + "Assignment : " + homePage.listView.getItemNameByItemIndex(i);

			if (strDiff.equals("")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Multi selected assignment objects are approved.");
			else
				Log.fail("Test case Failed. One or more multi-selected assignment is not approved. Assignments are " + strDiff, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_33_4E

	/**
	 * 104.1.34.1A : User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Context menu Properties")
	public void SprintTest104_1_34_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through context menu
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.listView.rightClickItemByIndex(rand-1); //Right clicks the item
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through context menu.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_1A

	/**
	 * 104.1.34.1B : User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Operations menu Properties")
	public void SprintTest104_1_34_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through operations menu
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through operations menu.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_1B

	/**
	 * 104.1.34.1C : User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Taskpanel Properties")
	public void SprintTest104_1_34_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through taskpanel
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through taskpanel.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_1C

	/**
	 * 104.1.34.1D : User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added empty value property - Rightpane Properties")
	public void SprintTest104_1_34_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through rightpane
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened in rightpane.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_1D

	/**
	 * 104.1.34.2A : User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Context menu Properties")
	public void SprintTest104_1_34_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog through context menu
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through context menu.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_2A

	/**
	 * 104.1.34.2B : User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Operations menu Properties")
	public void SprintTest104_1_34_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog through operations menu
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through operations menu.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_2B

	/**
	 * 104.1.34.2C : User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Taskpanel Properties")
	public void SprintTest104_1_34_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog through taskpanel
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through taskpanel.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_2C

	/**
	 * 104.1.34.2D : User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added empty value property - Rightpane Properties")
	public void SprintTest104_1_34_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog in rightpane
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectByCtrlKey(noOfItems); //Select multiple items by ctrl key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened in rightpane.", driver);

			//Step-3 : Add new property to the multi selected assignment objects
			//------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Empty value property is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. Empty value property is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_2D

	/**
	 * 104.1.34.3A : User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Context menu Properties")
	public void SprintTest104_1_34_3A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through context menu
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.listView.rightClickItemByIndex(rand-1); //Right clicks the item
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through context menu.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_3A

	/**
	 * 104.1.34.3B : User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Operations menu Properties")
	public void SprintTest104_1_34_3B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through operations menu
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through operations menu.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_3B

	/**
	 * 104.1.34.3C : User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Taskpanel Properties")
	public void SprintTest104_1_34_3C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through taskpanel
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened through taskpanel.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_3C

	/**
	 * 104.1.34.3D : User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (SHIFT key) assignment object with newly added property and value - Rightpane Properties")
	public void SprintTest104_1_34_3D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using SHIFT key and open properties dialog through rightpane
			//-------------------------------------------------------------------------------------------------
			int rand = Utility.getRandomNumber(0, homePage.listView.itemCount());
			homePage.listView.shiftclickMultipleItemsByIndex(0, rand-1); //Select multiple items by shift key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using SHIFT key is opened in rightpane.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_3D

	/**
	 * 104.1.34.4A : User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Context menu Properties")
	public void SprintTest104_1_34_4A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog through context menu
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectRightClickByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through context menu.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_4A

	/**
	 * 104.1.34.4B : User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Operations menu Properties")
	public void SprintTest104_1_34_4B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog through operations menu
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through operations menu.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_4B

	/**
	 * 104.1.34.4C : User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Taskpanel Properties")
	public void SprintTest104_1_34_4C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog through taskpanel
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectByCtrlKey(noOfItems); //Select multiple items by ctrl key
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened through taskpanel.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_4C

	/**
	 * 104.1.34.4D : User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to save multiselected (CTRL key) assignment object with newly added property and value - Rightpane Properties")
	public void SprintTest104_1_34_4D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Mutli-select assignments using CTRL key and open properties dialog in rightpane
			//-------------------------------------------------------------------------------------------------
			int noOfItems = Integer.parseInt(dataPool.get("AssignmentCount"));
			homePage.listView.multiSelectByCtrlKey(noOfItems); //Select multiple items by ctrl key

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments using CTRL key is opened in rightpane.", driver);

			//Step-3 : Add new property and value to the multi selected assignment objects
			//-----------------------------------------------------------------------------
			metadatacard.addNewProperty(dataPool.get("NewProperty"));
			metadatacard.setPropertyValue(dataPool.get("NewProperty"), dataPool.get("PropertyValue"));

			Log.message("3. New Property (" + dataPool.get("NewProperty") + ") and value (" + dataPool.get("PropertyValue") + ") is added to the multi-selected assignments.", driver);

			//Step-4 : Save the metadatacard 
			//-------------------------------
			metadatacard.saveAndClose(); //Saves and closes the metadatacard.
			Utils.fluentWait(driver);

			metadatacard = new MetadataCard(driver, true); //Instantiates the metadatacard in rightpane

			Log.message("4. Metadatacard is saved after adding new property.");

			//Verification : Verifies if assignment approved by metadatacard properties
			//-------------------------------------------------------------------------
			if (metadatacard.propertyExists(dataPool.get("NewProperty")) && //Checks if new property and its value exists in metadatacard.
					metadatacard.getPropertyValue(dataPool.get("NewProperty")).equalsIgnoreCase(dataPool.get("PropertyValue")))
				Log.pass("Test case Passed. New property and its value is added successfully to multi-selected assignment object.");
			else
				Log.fail("Test case Failed. New property and its value is not added to multi-selected assignment object.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_34_4D

	/**
	 * 104.1.35A : Verify if user can able to approve newly created assignment object - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Context menu Properties")
	public void SprintTest104_1_35A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			Log.message("4. Approve icon is selected.", driver);

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metdatacard

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Newly created assignment is approved.");
			else
				Log.fail("Test case Failed. Newly created assignment is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_35A

	/**
	 * 104.1.35B : Verify if user can able to approve newly created assignment object - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Operations menu Properties")
	public void SprintTest104_1_35B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			Log.message("4. Approve icon is selected.", driver);

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metdatacard

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Newly created assignment is approved.");
			else
				Log.fail("Test case Failed. Newly created assignment is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_35B

	/**
	 * 104.1.35C : Verify if user can able to approve newly created assignment object - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Taskpanel Properties")
	public void SprintTest104_1_35C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			Log.message("4. Approve icon is selected.", driver);

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metdatacard

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Newly created assignment is approved.");
			else
				Log.fail("Test case Failed. Newly created assignment is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_35C

	/**
	 * 104.1.35D : Verify if user can able to approve newly created assignment object - Rightpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Rightpane")
	public void SprintTestd104_1_35D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Open the Properties dialog of the new assignment through right pane
			//------------------------------------------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through right pane.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			Log.message("4. Approve icon is selected.", driver);

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metdatacard

			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Newly created assignment is approved.");
			else
				Log.fail("Test case Failed. Newly created assignment is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_35D

	/**
	 * 104.1.35E : Verify if user can able to approve newly created assignment object - Taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify if assignment can be marked as complete - Taskpanel")
	public void SprintTest104_1_35E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment details are entered and saved the metadatacard.");

			//Step-3 : Select Approve icon from taskpanel
			//-------------------------------------------
			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel //Selects Approve from taskpanel menu

			Log.message("3. Approve is selected for the new assignment (" + assigName + ") from taskpanel.");

			//Verification : Verifies if Mark Complete Icon is displayed
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Newly created assignment is approved.");
			else
				Log.fail("Test case Failed. Newly created assignment is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_35E

	/**
	 * 104.1.36A : Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Context menu Properties")
	public void SprintTest104_1_36A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Open the Properties dialog of the assignment with various mutlipe assigned to users through context menu
			//-----------------------------------------------------------------------------------------------------------------
			int index1 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName1"), "Assigned to");
			int index2 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName2"), "Assigned to");
			String strIndex = index1 + "," + index2;
			homePage.listView.clickMultipleItemsByIndex(strIndex);
			homePage.listView.rightClickItemByIndex(index2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments with various assigned to users is opened through context menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.getPropertyValue("Assigned to").toUpperCase().contains("VARIES")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property..", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_36A

	/**
	 * 104.1.36B : Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Operations menu Properties")
	public void SprintTest104_1_36B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Open the Properties dialog of the assignment with various mutlipe assigned to users through operations menu
			//-----------------------------------------------------------------------------------------------------------------
			int index1 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName1"), "Assigned to");
			int index2 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName2"), "Assigned to");
			String strIndex = index1 + "," + index2;
			homePage.listView.clickMultipleItemsByIndex(strIndex);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments with various assigned to users is opened through operations menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.getPropertyValue("Assigned to").toUpperCase().contains("VARIES")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property..", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_36B

	/**
	 * 104.1.36C : Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Taskpanel Properties")
	public void SprintTest104_1_36C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Open the Properties dialog of the assignment with various mutlipe assigned to users through Taskpanel
			//-----------------------------------------------------------------------------------------------------------------
			int index1 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName1"), "Assigned to");
			int index2 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName2"), "Assigned to");
			String strIndex = index1 + "," + index2;
			homePage.listView.clickMultipleItemsByIndex(strIndex);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel

			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignments with various assigned to users is opened through Taskpanel.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.getPropertyValue("Assigned to").toUpperCase().contains("VARIES")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property..", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_36C

	/**
	 * 104.1.36D : Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify the 'Assigned to' property of an assignment that is assigned to multiple users - Rightpane Properties")
	public void SprintTest104_1_36D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Open the Properties dialog of the assignment with various mutlipe assigned to users through Taskpanel
			//-----------------------------------------------------------------------------------------------------------------
			int index1 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName1"), "Assigned to");
			int index2 = homePage.listView.getItemIndexByItemName(dataPool.get("UserName2"), "Assigned to");
			String strIndex = index1 + "," + index2;
			homePage.listView.clickMultipleItemsByIndex(strIndex);

			MetadataCard metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("2. Properties dialog of multi selected assignment with various assigned to users is opened through rightpane.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.getPropertyValue("Assigned to").toUpperCase().contains("VARIES")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text is displayed in Assigned to property on selecting assignments with various assigned to property..", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_36D

	/**
	 * 104.1.37A : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Context menu Properties")
	public void SprintTest104_1_37A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through context menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through context menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			String propValue = metadatacard.getPropertyValue("Assigned to") + "," + metadatacard.getPropertyValue("Assigned to", 2);

			if (propValue.toUpperCase().contains("VARIES") && propValue.toUpperCase().contains(dataPool.get("UserFullName1"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text & Assigned user is displayed in Assigned to property on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text & Assigned user is not displayed in Assigned to property on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_37A

	/**
	 * 104.1.37B : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Operations menu Properties")
	public void SprintTest104_1_37B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through operations menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through operations menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			String propValue = metadatacard.getPropertyValue("Assigned to") + "," + metadatacard.getPropertyValue("Assigned to", 2);

			if (propValue.toUpperCase().contains("VARIES") && propValue.toUpperCase().contains(dataPool.get("UserFullName1"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text & Assigned user is displayed in Assigned to property on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text & Assigned user is not displayed in Assigned to property on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_37B

	/**
	 * 104.1.37C : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Taskpanel Properties")
	public void SprintTest104_1_37C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through taskpanel menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through taskpanel.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			String propValue = metadatacard.getPropertyValue("Assigned to") + "," + metadatacard.getPropertyValue("Assigned to", 2);

			if (propValue.toUpperCase().contains("VARIES") && propValue.toUpperCase().contains(dataPool.get("UserFullName1"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text & Assigned user is displayed in Assigned to property on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text & Assigned user is not displayed in Assigned to property on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_37C

	/**
	 * 104.1.37D : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Rightpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Rightpane")
	public void SprintTest104_1_37D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through rightpane
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through rightpane.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			String propValue = metadatacard.getPropertyValue("Assigned to") + "," + metadatacard.getPropertyValue("Assigned to", 2);

			if (propValue.toUpperCase().contains("VARIES") && propValue.toUpperCase().contains(dataPool.get("UserFullName1"))) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Varies text & Assigned user is displayed in Assigned to property on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Varies text & Assigned user is not displayed in Assigned to property on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_37D

	/**
	 * 104.1.38A : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Context menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Context menu Properties")
	public void SprintTest104_1_38A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through context menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through context menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(2) && metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icons are displayed on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Approved and Rejected icons are not displayed on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_38A

	/**
	 * 104.1.38B : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Operations menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Operations menu Properties")
	public void SprintTest104_1_38B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through operations menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through operations menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(2) && metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icons are displayed on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Approved and Rejected icons are not displayed on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_38B

	/**
	 * 104.1.38C : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Taskpanel Properties")
	public void SprintTest104_1_38C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through taskpanel menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through taskpanel menu.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(2) && metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icons are displayed on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Approved and Rejected icons are not displayed on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_38C

	/**
	 * 104.1.38D : Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Rightpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Assignee and varies text is displayed for multiselected assignment which has same&different user - Rightpane Properties")
	public void SprintTest104_1_38D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through rightpane
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through rightpane.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (metadatacard.isNotApprovedDisplayed() && metadatacard.isNotApprovedDisplayed(2) && metadatacard.isNotRejectedDisplayed() && metadatacard.isNotRejectedDisplayed(2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approved and Rejected icons are displayed on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Approved and Rejected icons are not displayed on selecting assignments with same and various assigned to property.", driver);

			metadatacard.cancelAndConfirm();

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_38D

	/**
	 * 104.1.39 : Verify Mark complete option in task pane for multiselected assignment which has same and different assignee
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Verify Mark complete option in task pane for multiselected assignment which has same and different assignee")
	public void SprintTest104_1_39(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Multi select the above created assignments
			//---------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignments with same and various assigned to users is selected.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (homePage.taskPanel.isItemExists("Approve") && homePage.taskPanel.isItemExists("Reject")) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Approve and Reject text are displayed in taskpanel on selecting assignments with same and various assigned to property.");
			else
				Log.fail("Test case Failed. Approve and Reject text are not displayed in taskpanel on selecting assignments with same and various assigned to property.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_39

	/**
	 * 104.1.40A : Approve multiselected assignment object which has same and different user - Context Menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve multiselected assignment object which has same and different user - Context Menu Properties")
	public void SprintTest104_1_40A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through context menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through context menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is approved.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_40A

	/**
	 * 104.1.40B : Approve multiselected assignment object which has same and different user - Operations Menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve multiselected assignment object which has same and different user - Operations Menu Properties")
	public void SprintTest104_1_40B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through Operations menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from Operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through Operations menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is approved.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_40B

	/**
	 * 104.1.40C : Approve multiselected assignment object which has same and different user - Taskpanel Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve multiselected assignment object which has same and different user - Taskpanel Properties")
	public void SprintTest104_1_40C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through taskpanel menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from Operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through taskpanel menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is approved.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_40C

	/**
	 * 104.1.40D : Approve multiselected assignment object which has same and different user - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve multiselected assignment object which has same and different user - Rightpane Properties")
	public void SprintTest104_1_40D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through rightpane menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through rightpane menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is approved.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_40D

	/**
	 * 104.1.41A : Reject the multiselected assignment object which has same and different user - Context Menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the multiselected assignment object which has same and different user - Context Menu Properties")
	public void SprintTest104_1_41A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through context menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through context menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assignment is rejected
			//-------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is rejected.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not rejected.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_41A

	/**
	 * 104.1.41B : Reject the multiselected assignment object which has same and different user - operations Menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the multiselected assignment object which has same and different user - operations Menu Properties")
	public void SprintTest104_1_41B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through Operations menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from Operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through Operations menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assignment is rejected
			//-------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is rejected.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not rejected.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_41B

	/**
	 * 104.1.41C : Reject the multiselected assignment object which has same and different user - Taskpane Menu Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the multiselected assignment object which has same and different user - Taskpane Menu Properties")
	public void SprintTest104_1_41C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through taskpanel menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from Operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through taskpanel menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assignment is rejected
			//-------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is rejected.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not rejected.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_41C

	/**
	 * 104.1.41D : Reject the multiselected assignment object which has same and different user - Rightpane Properties
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"},  
			description = "Reject the multiselected assignment object which has same and different user - Rightpane Properties")
	public void SprintTest104_1_41D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Open the Properties dialog of the assignment with various mutlipe assigned to users through rightpane menu
			//-----------------------------------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multi selected assignments with various assigned to users is opened through rightpane menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assignment is rejected
			//-------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is rejected.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not rejected.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_41D

	/**
	 * 104.1.41E : Reject the multiselected assignment object which has same and different user through taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the multiselected assignment object which has same and different user - through taskpanel")
	public void SprintTest104_1_41E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Multi select the assignment with various mutlipe assigned to users 
			//---------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignments with various assigned to users is selected.", driver);

			//Step-5 : Select Reject for the multi-selected assignments from taskpanel
			//---------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel//Clicks Approve from taskpanel

			Log.message("5. Reject is selected from taskpanel.", driver);

			//Verification : Verifies if assignment is rejected
			//-------------------------------------------------
			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is rejected.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not rejected.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_41E

	/**
	 * 104.1.42 : Approve multiselected assignment object which has same and different user from Taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve multiselected assignment object which has same and different user from Taskpanel")
	public void SprintTest104_1_42(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName).toString();
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName2"), 2); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with two assigned to users.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment(" + assigName2 + ")  is created with one assigned to user.");

			//Step-4 : Multi select the assignment with various mutlipe assigned to users 
			//---------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignments with various assigned to users is selected.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel //Clicks Approve from taskpanel

			Log.message("5. Approve is selected from taskpanel.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Mutliselected assignments with same and various assigned to property is approved.");
			else
				Log.fail("Test case Failed. Mutliselected assignments with same and various assigned to property is not approved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_42

	/**
	 * 104.1.47.1A : Approve the assignment in metadatacard on multi-selecting assignment with document through context menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve the assignment in metadatacard on multi-selecting assignment with document through context menu")
	public void SprintTest104_1_47_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(docName);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved on selecting it with document in metadatacard opened through context menu.");
			else
				Log.fail("Test case Failed. Assignment is not approved on selecting it with document in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_1A

	/**
	 * 104.1.47.1B : Approve the assignment in metadatacard on multi-selecting assignment with document through operations menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve the assignment in metadatacard on multi-selecting assignment with document through operations menu")
	public void SprintTest104_1_47_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//------------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved on selecting it with document in metadatacard opened through operations menu.");
			else
				Log.fail("Test case Failed. Assignment is not approved on selecting it with document in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_1B

	/**
	 * 104.1.47.1C : Approve the assignment in metadatacard on multi-selecting assignment with document through taskpanel menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve the assignment in metadatacard on multi-selecting assignment with document through taskpanel menu")
	public void SprintTest104_1_47_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//------------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved on selecting it with document in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignment is not approved on selecting it with document in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_1C

	/**
	 * 104.1.47.1D : Approve the assignment in metadatacard on multi-selecting assignment with document in Rightpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve the assignment in metadatacard on multi-selecting assignment with document in Rightpanel")
	public void SprintTest104_1_47_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//------------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened in rightpanel.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved on selecting it with document in rightpanel metadatacard.");
			else
				Log.fail("Test case Failed. Assignment is not approved on selecting it with document in rightpanel metadatacard.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_1D

	/**
	 * 104.1.47.1E : Approve the assignment on multi-selecting assignment with document in taskpanel.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve the assignment on multi-selecting assignment with document in taskpanel.")
	public void SprintTest104_1_47_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Select the assignment and document object in the list
			//--------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignment & document object is selected in the list.", driver);

			//Step-5 : Select Approve from taskpanel
			//--------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel

			Log.message("5. Approve icon is selected in taskpanel.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (ListView.isApprovedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is approved through taskpanel on selecting it with document.");
			else
				Log.fail("Test case Failed. Assignment is not approved through taskpanel on selecting it with document.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_1E

	/**
	 * 104.1.47.2A : Reject the assignment in metadatacard on multi-selecting assignment with document through context menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the assignment in metadatacard on multi-selecting assignment with document through context menu")
	public void SprintTest104_1_47_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(docName);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Reject icon is selected.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected on selecting it with document in metadatacard opened through context menu.");
			else
				Log.fail("Test case Failed. Assignment is not rejected on selecting it with document in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_2A

	/**
	 * 104.1.47.2B : Reject the assignment in metadatacard on multi-selecting assignment with document through operations menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the assignment in metadatacard on multi-selecting assignment with document through operations menu")
	public void SprintTest104_1_47_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Reject icon is selected.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected on selecting it with document in metadatacard opened through operations menu.");
			else
				Log.fail("Test case Failed. Assignment is not rejected on selecting it with document in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_2B

	/**
	 * 104.1.47.2C : Reject the assignment in metadatacard on multi-selecting assignment with document through taskpanel menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the assignment in metadatacard on multi-selecting assignment with document through taskpanel menu")
	public void SprintTest104_1_47_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Reject icon is selected.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected on selecting it with document in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignment is not rejected on selecting it with document in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_2C

	/**
	 * 104.1.47.2D : Reject the assignment in metadatacard on multi-selecting assignment with document in rightpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the assignment in metadatacard on multi-selecting assignment with document in rightpane")
	public void SprintTest104_1_47_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Open the Properties dialog of the assignment and document in right pane
			//--------------------------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened in rightpane.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Reject icon is selected.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected on selecting it with document in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignment is not rejected on selecting it with document in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_2D

	/**
	 * 104.1.47.2E : Reject the assignment on multi-selecting assignment with document in taskpanel.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject the assignment on multi-selecting assignment with document in taskpanel.")
	public void SprintTest104_1_47_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Create a document with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Document.Value); //Clicks New Assignment from the menu bar
			String docName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setTemplate(dataPool.get("Extension"));
			metadatacard.setPropertyValue("Class", dataPool.get("DocClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", docName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Document(" + docName + ")  is created.");

			//Step-4 : Select the assignment and document object in the list
			//--------------------------------------------------------------
			String assignName = assigName + "\n" + docName;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignment & document object is selected in the list.", driver);

			//Step-5 : Select Reject from taskpanel
			//--------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			Log.message("5. Reject icon is selected in taskpanel.", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			if (ListView.isRejectedByItemName(driver, assigName)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is rejected through taskpanel on selecting it with document.");
			else
				Log.fail("Test case Failed. Assignment is not rejected through taskpanel on selecting it with document.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_47_2E

	/**
	 * 104.1.48A : Discard the approved multi-selected assignment in metadatacard opened through context menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the approved multi-selected assignment in metadatacard opened through context menu")
	public void SprintTest104_1_48A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) && !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not approved on discarding the multi-selected approved assignment in metadatacard properties opened through context menu.");
			else
				Log.fail("Test case Failed. Assignment is approved on discarding the multi-selected approved assignment in metadatacard properties opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_48A

	/**
	 * 104.1.48B : Discard the approved multi-selected assignment in metadatacard opened through operations menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the approved multi-selected assignment in metadatacard opened through operations menu")
	public void SprintTest104_1_48B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) && !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not approved on discarding the multi-selected approved assignment in metadatacard properties opened through operations menu.");
			else
				Log.fail("Test case Failed. Assignment is approved on discarding the multi-selected approved assignment in metadatacard properties opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_48B

	/**
	 * 104.1.48C : Discard the approved multi-selected assignment in metadatacard opened through taskpanel menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the approved multi-selected assignment in metadatacard opened through taskpanel menu")
	public void SprintTest104_1_48C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) && !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not approved on discarding the multi-selected approved assignment in metadatacard properties opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignment is approved on discarding the multi-selected approved assignment in metadatacard properties opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_48C

	/**
	 * 104.1.48D : Discard the approved multi-selected assignment in metadatacard opened in rightpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the approved multi-selected assignment in metadatacard opened in rightpanel")
	public void SprintTest104_1_48D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignments in rightpanel
			//--------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened in rightpanel.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) && !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not approved on discarding the multi-selected approved assignment in metadatacard properties opened in rightpanel.");
			else
				Log.fail("Test case Failed. Assignment is approved on discarding the multi-selected approved assignment in metadatacard properties opened in rightpanel.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_48D

	/**
	 * 104.1.49A : Discard the rejected multi-selected assignment in metadatacard opened through context menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the rejected multi-selected assignment in metadatacard opened through context menu")
	public void SprintTest104_1_49A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) && !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not rejected on discarding the multi-selected rejected assignment in metadatacard properties opened through context menu.");
			else
				Log.fail("Test case Failed. Assignment is rejected on discarding the multi-selected rejected assignment in metadatacard properties opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_49A

	/**
	 * 104.1.49B : Discard the rejected multi-selected assignment in metadatacard opened through operations menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the rejected multi-selected assignment in metadatacard opened through operations menu")
	public void SprintTest104_1_49B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) && !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not rejected on discarding the multi-selected rejected assignment in metadatacard properties opened through operations menu.");
			else
				Log.fail("Test case Failed. Assignment is rejected on discarding the multi-selected rejected assignment in metadatacard properties opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_49B

	/**
	 * 104.1.49C : Discard the rejected multi-selected assignment in metadatacard opened through taskpanel menu
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the rejected multi-selected assignment in metadatacard opened through taskpanel menu")
	public void SprintTest104_1_49C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) && !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not rejected on discarding the multi-selected rejected assignment in metadatacard properties opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignment is rejected on discarding the multi-selected rejected assignment in metadatacard properties opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_49C

	/**
	 * 104.1.49D : Discard the rejected multi-selected assignment in metadatacard opened in rightpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Discard the rejected multi-selected assignment in metadatacard opened in rightpanel")
	public void SprintTest104_1_49D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignments in rightpanel
			//--------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened in rightpanel.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Click Discard button
			//-----------------------------
			metadatacard.clickDiscardButton(); //Clicks Discard button

			Log.message("6. Discard button is clicked ");

			//Verification : Verifies if multiselected assignment is not rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) && !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignment is not rejected on discarding the multi-selected rejected assignment in metadatacard properties opened in rightpanel.");
			else
				Log.fail("Test case Failed. Assignment is rejected on discarding the multi-selected rejected assignment in metadatacard properties opened in rightpanel.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_49D

	/**
	 * 104.1.50A : Adding comments should be possible in metadatacard for single assignment opened through context menu after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened through context menu after approving the assignment")
	public void SprintTest104_1_50A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment through context menu
			//---------------------------------------------------------------------------
			homePage.listView.rightClickItem(assigName);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened through context menu.", driver);

			//Step-4 : Select Approve icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("4. Approve icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verify if assignment is approved and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName)) //Verifies if assignment is approved
				throw new Exception("Test case Failed. Assignment is not approved after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through context menu after clicking approve icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through context menu after clicking approve icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_50A

	/**
	 * 104.1.50B : Adding comments should be possible in metadatacard for single assignment opened through operations menu after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened through operations menu after approving the assignment")
	public void SprintTest104_1_50B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment through operations menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened through operations menu.", driver);

			//Step-4 : Select Approve icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("4. Approve icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verify if assignment is approved and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName)) //Verifies if assignment is approved
				throw new Exception("Test case Failed. Assignment is not approved after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through operations menu after clicking approve icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through operations menu after clicking approve icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_50B

	/**
	 * 104.1.50C : Adding comments should be possible in metadatacard for single assignment opened through taskpanel menu after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened through taskpanel menu after approving the assignment")
	public void SprintTest104_1_50C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment through taskpanel menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened through taskpanel menu.", driver);

			//Step-4 : Select Approve icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("4. Approve icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verify if assignment is approved and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName)) //Verifies if assignment is approved
				throw new Exception("Test case Failed. Assignment is not approved after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through taskpanel menu after clicking approve icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through taskpanel menu after clicking approve icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_50C

	/**
	 * 104.1.50D : Adding comments should be possible in metadatacard for single assignment opened in rightpane after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened in rightpane after approving the assignment")
	public void SprintTest104_1_50D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment in rightpane
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened in rightpane.", driver);

			//Step-4 : Select Approve icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("4. Approve icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verify if assignment is approved and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName)) //Verifies if assignment is approved
				throw new Exception("Test case Failed. Assignment is not approved after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened in rightpane after clicking approve icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened in rightpane after clicking approve icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_50D

	/**
	 * 104.1.51A : Adding comments should be possible in metadatacard for multi-selected assignments opened through context menu after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened through context menu after approving the assignment")
	public void SprintTest104_1_51A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) || !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in approved state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through context menu after clicking approve icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through context menu after clicking approve icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_51A

	/**
	 * 104.1.51B : Adding comments should be possible in metadatacard for multi-selected assignments opened through operations menu after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened through operations menu after approving the assignment")
	public void SprintTest104_1_51B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) || !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in approved state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through operations menu after clicking approve icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through operations menu after clicking approve icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_51B

	/**
	 * 104.1.51C : Adding comments should be possible in metadatacard for multi-selected assignments opened through taskpanel menu after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened through taskpanel menu after approving the assignment")
	public void SprintTest104_1_51C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) || !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in approved state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through taskpanel menu after clicking approve icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through taskpanel menu after clicking approve icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_51C

	/**
	 * 104.1.51D : Adding comments should be possible in metadatacard for multi-selected assignments opened in rightpane after approving the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened in rightpane after approving the assignment")
	public void SprintTest104_1_51D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment in rightpane
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multiselected assignments is opened in rightpane.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting approve icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting approve icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting approve icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not approved
			//-------------------------------------------------------------------
			if (!ListView.isApprovedByItemName(driver, assigName2) || !ListView.isApprovedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in approved state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened in rightpane after clicking approve icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened in rightpane after clicking approve icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_51D

	/**
	 * 104.1.52A : Adding comments should be possible in metadatacard for single assignment opened through context menu after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened through context menu after rejecting the assignment")
	public void SprintTest104_1_52A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment through context menu
			//---------------------------------------------------------------------------
			homePage.listView.rightClickItem(assigName);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened through context menu.", driver);

			//Step-4 : Select Reject icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("4. Reject icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verify if assignment is Rejected and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName)) //Verifies if assignment is Rejected
				throw new Exception("Test case Failed. Assignment is not Rejected after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through context menu after clicking Reject icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through context menu after clicking Reject icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_52A

	/**
	 * 104.1.52B : Adding comments should be possible in metadatacard for single assignment opened through operations menu after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened through operations menu after rejecting the assignment")
	public void SprintTest104_1_52B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment through operations menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened through operations menu.", driver);

			//Step-4 : Select Reject icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("4. Reject icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verify if assignment is Rejected and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName)) //Verifies if assignment is Rejected
				throw new Exception("Test case Failed. Assignment is not Rejected after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through operations menu after clicking Reject icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through operations menu after clicking Reject icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_52B

	/**
	 * 104.1.52C : Adding comments should be possible in metadatacard for single assignment opened through taskpanel menu after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened through taskpanel menu after rejecting the assignment")
	public void SprintTest104_1_52C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment through taskpanel menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened through taskpanel menu.", driver);

			//Step-4 : Select Reject icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("4. Reject icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verify if assignment is Rejected and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName)) //Verifies if assignment is Rejected
				throw new Exception("Test case Failed. Assignment is not Rejected after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through taskpanel menu after clicking Reject icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through taskpanel menu after clicking Reject icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_52C

	/**
	 * 104.1.52D : Adding comments should be possible in metadatacard for single assignment opened in rightpane after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for single assignment opened in rightpane after rejecting the assignment")
	public void SprintTest104_1_52D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName + ") is created.");

			//Step-3 : Open the Properties dialog of the assignment in rightpane
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of an assignment is opened in rightpane.", driver);

			//Step-4 : Select Reject icon for the assignment
			//-----------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("4. Reject icon is selected", driver);

			//Step-5 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-6 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("6. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verify if assignment is Rejected and comments are as entered
			//-----------------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName)) //Verifies if assignment is Rejected
				throw new Exception("Test case Failed. Assignment is not Rejected after saving the changes to metadatacard.");

			if (ListView.getCommentsByItemName(driver, assigName).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened in rightpane after clicking Reject icon is saved successfully.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened in rightpane after clicking Reject icon is not saved.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_52D

	/**
	 * 104.1.53A : Adding comments should be possible in metadatacard for multi-selected assignments opened through context menu after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened through context menu after rejecting the assignment")
	public void SprintTest104_1_53A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not Rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) || !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in Rejected state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through context menu after clicking Reject icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through context menu after clicking Reject icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_53A

	/**
	 * 104.1.53B : Adding comments should be possible in metadatacard for multi-selected assignments opened through operations menu after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened through operations menu after rejecting the assignment")
	public void SprintTest104_1_53B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not Rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) || !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in Rejected state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through operations menu after clicking Reject icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through operations menu after clicking Reject icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_53B

	/**
	 * 104.1.53C : Adding comments should be possible in metadatacard for multi-selected assignments opened through taskpanel menu after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened through taskpanel menu after rejecting the assignment")
	public void SprintTest104_1_53C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not Rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) || !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in Rejected state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened through taskpanel menu after clicking Reject icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened through taskpanel menu after clicking Reject icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_53C

	/**
	 * 104.1.53D : Adding comments should be possible in metadatacard for multi-selected assignments opened in rightpane after rejecting the assignment
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Adding comments should be possible in metadatacard for multi-selected assignments opened in rightpane after rejecting the assignment")
	public void SprintTest104_1_53D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with 
			//-----------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created.");

			//Step-3 : Create second asssignment with one assigned to user
			//----------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName);
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created.");

			//Step-4 : Open the Properties dialog of the assignment in rightpane
			//----------------------------------------------------------------------------------------
			String mergedName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(mergedName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of multiselected assignments is opened in rightpane.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Step-6 : Add comments to the assignment after selecting Reject icon
			//--------------------------------------------------------------------
			String comments = Utility.getObjectName(methodName);
			metadatacard.setComments(comments);

			Log.message("5. Comments is entered assignment after selecting Reject icon.", driver);

			//Step-7 : Save the assignment object
			//-----------------------------------
			metadatacard.saveAndClose(); 

			Log.message("5. Metadatacard is saved after selecting Reject icon and entering comments.");

			//Verification : Verifies if multiselected assignment is not Rejected
			//-------------------------------------------------------------------
			if (!ListView.isRejectedByItemName(driver, assigName2) || !ListView.isRejectedByItemName(driver, assigName1)) //Checks if Assignment completed icon is displayed
				throw new Exception("Assignments are not in Rejected state");

			if (ListView.getCommentsByItemName(driver, assigName1).equalsIgnoreCase(comments) && ListView.getCommentsByItemName(driver, assigName2).equalsIgnoreCase(comments)) //Verifies if comments are as entered
				Log.pass("Test case Passed. Comments entered in metadatacard opened in rightpane after clicking Reject icon is saved successfully for mutli-selected assignments.");
			else
				Log.fail("Test case Failed. Comments entered in metadatacard opened in rightpane after clicking Reject icon is not saved for mutli-selected assignments.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_53D

	/**
	 * 104.1.59.1A : Approve option should not available in metadatacard opened through context menu properties for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve option should not available in metadatacard opened through context menu properties for non-assigned users.")
	public void SprintTest104_1_59_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment through context menu
			//---------------------------------------------------------------------------
			homePage.listView.rightClickItem(assigName);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened through context menu.", driver);

			//Verification : Verify if Approve icon is available
			//--------------------------------------------------
			if (!metadatacard.isNotApprovedDisplayed()) //Verifies if Approve icon is available
				Log.pass("Test case Passed. Approve icon is not available in metadatacard opened through context menu for non-assigned users.");
			else
				Log.fail("Test case Failed. Approve icon is available in metadatacard opened through context menu for non-assigned users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_1A

	/**
	 * 104.1.59.1B : Approve option should not available in metadatacard opened through operations menu properties for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve option should not available in metadatacard opened through operations menu properties for non-assigned users.")
	public void SprintTest104_1_59_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment through operations menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened through operations menu.", driver);

			//Verification : Verify if Approve icon is available
			//--------------------------------------------------
			if (!metadatacard.isNotApprovedDisplayed()) //Verifies if Approve icon is available
				Log.pass("Test case Passed. Approve icon is not available in metadatacard opened through operations menu for non-assigned users.");
			else
				Log.fail("Test case Failed. Approve icon is available in metadatacard opened through operations menu for non-assigned users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_1B

	/**
	 * 104.1.59.1C : Approve option should not available in metadatacard opened through taskpanel menu properties for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve option should not available in metadatacard opened through taskpanel menu properties for non-assigned users.")
	public void SprintTest104_1_59_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment through taskpanel menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened through taskpanel menu.", driver);

			//Verification : Verify if Approve icon is available
			//--------------------------------------------------
			if (!metadatacard.isNotApprovedDisplayed()) //Verifies if Approve icon is available
				Log.pass("Test case Passed. Approve icon is not available in metadatacard opened through taskpanel menu for non-assigned users.");
			else
				Log.fail("Test case Failed. Approve icon is available in metadatacard opened through taskpanel menu for non-assigned users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_1C

	/**
	 * 104.1.59.1D : Approve option should not available in metadatacard opened in rightpane metadatacard for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve option should not available in metadatacard opened in rightpane metadatacard for non-assigned users.")
	public void SprintTest104_1_59_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment in rightpane metadatacard
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened in rightpane metadatacard.", driver);

			//Verification : Verify if Approve icon is available
			//--------------------------------------------------
			if (!metadatacard.isNotApprovedDisplayed()) //Verifies if Approve icon is available
				Log.pass("Test case Passed. Approve icon is not available in metadatacard opened through taskpanel menu for non-assigned users.");
			else
				Log.fail("Test case Failed. Approve icon is available in metadatacard opened through taskpanel menu for non-assigned users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_1D

	/**
	 * 104.1.59.1E : Approve option should not available in taskpanel for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve option should not available in taskpanel for non-assigned users.")
	public void SprintTest104_1_59_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Select the assignment
			//------------------------------
			homePage.listView.clickItem(assigName);

			Log.message("5. Assignment (" + assigName + ") is selected.", driver);

			//Verification : Verify if Approve icon is available
			//--------------------------------------------------
			if (homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value)) //Verifies if Approve icon is available
				Log.pass("Test case Passed. Approve is not available in taskpanel for non-assigned users.");
			else
				Log.fail("Test case Failed. Approve is available in taskpanel for non-assigned users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_1E

	/**
	 * 104.1.59.2A : Reject option should not available in metadatacard opened through context menu properties for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject option should not available in metadatacard opened through context menu properties for non-assigned users.")
	public void SprintTest104_1_59_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment through context menu
			//---------------------------------------------------------------------------
			homePage.listView.rightClickItem(assigName);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened through context menu.", driver);

			//Step-6 : Click Reject icon by non-assigned user
			//-----------------------------------------------------
			if (!metadatacard.isNotRejectedDisplayed()) //Verifies if Approve icon is available
				throw new Exception("Not Approve icon is not displayed for non-assigned users.");

			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected by non-assigned user.");

			Log.message("6. Reject icon is selected by non-assigned user.", driver);

			//Step-7 : Click Save button
			//---------------------------
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("7. Save button is clicked.");

			//Verification : Verify if M-Files dialog with Access denied message is displayed
			//-------------------------------------------------------------------------------
			String message = metadatacard.getMfilesDialogMessage();

			if (message.toUpperCase().contains("ACCESS DENIED"))
				Log.pass("Test case Passed. Access denied message dialog opened on rejected assignment through context menu properties for non-assigned users. Message : " + message);
			else
				Log.fail("Test case Failed.  Access denied message dialog does not opened on rejecting assignment through context menu properties for non-assigned users. Message : " + message, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_2A

	/**
	 * 104.1.59.2B : Reject option should not available in metadatacard opened through operations menu properties for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject option should not available in metadatacard opened through operations menu properties for non-assigned users.")
	public void SprintTest104_1_59_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment through operations menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened through operations menu.", driver);

			//Step-6 : Click Reject icon by non-assigned user
			//-----------------------------------------------------
			if (!metadatacard.isNotRejectedDisplayed()) //Verifies if Approve icon is available
				throw new Exception("Not Approve icon is not displayed for non-assigned users.");

			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected by non-assigned user.");

			Log.message("6. Reject icon is selected by non-assigned user.", driver);

			//Step-7 : Click Save button
			//---------------------------
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("7. Save button is clicked.");

			//Verification : Verify if M-Files dialog with Access denied message is displayed
			//-------------------------------------------------------------------------------
			String message = metadatacard.getMfilesDialogMessage();

			if (message.toUpperCase().contains("ACCESS DENIED"))
				Log.pass("Test case Passed. Access denied message dialog opened on rejected assignment through operations menu properties for non-assigned users. Message : " + message);
			else
				Log.fail("Test case Failed.  Access denied message dialog does not opened on rejecting assignment through operations menu properties for non-assigned users. Message : " + message, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_2B

	/**
	 * 104.1.59.2C : Reject option should not available in metadatacard opened through taskpanel menu properties for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject option should not available in metadatacard opened through taskpanel menu properties for non-assigned users.")
	public void SprintTest104_1_59_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment through taskpanel menu
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened through taskpanel menu.", driver);

			//Step-6 : Click Reject icon by non-assigned user
			//-----------------------------------------------------
			if (!metadatacard.isNotRejectedDisplayed()) //Verifies if Approve icon is available
				throw new Exception("Not Approve icon is not displayed for non-assigned users.");

			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected by non-assigned user.");

			Log.message("6. Reject icon is selected by non-assigned user.", driver);

			//Step-7 : Click Save button
			//---------------------------
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("7. Save button is clicked.");

			//Verification : Verify if M-Files dialog with Access denied message is displayed
			//-------------------------------------------------------------------------------
			String message = metadatacard.getMfilesDialogMessage();

			if (message.toUpperCase().contains("ACCESS DENIED"))
				Log.pass("Test case Passed. Access denied message dialog opened on rejected assignment through taskpanel menu properties for non-assigned users. Message : " + message);
			else
				Log.fail("Test case Failed.  Access denied message dialog does not opened on rejecting assignment through taskpanel menu properties for non-assigned users. Message : " + message, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_2C

	/**
	 * 104.1.59.2D : Reject option should not available in metadatacard opened in rightpane metadatacard for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject option should not available in metadatacard opened in rightpane metadatacard for non-assigned users.")
	public void SprintTest104_1_59_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Open the Properties dialog of the assignment in rightpane metadatacard
			//---------------------------------------------------------------------------
			homePage.listView.clickItem(assigName);
			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("5. Properties dialog of an assignment is opened in rightpane metadatacard.", driver);

			//Step-6 : Click Reject icon by non-assigned user
			//-----------------------------------------------------
			if (!metadatacard.isNotRejectedDisplayed()) //Verifies if Approve icon is available
				throw new Exception("Not Approve icon is not displayed for non-assigned users.");

			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected by non-assigned user.");

			Log.message("6. Reject icon is selected by non-assigned user.", driver);

			//Step-7 : Click Save button
			//---------------------------
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("7. Save button is clicked.");

			//Verification : Verify if M-Files dialog with Access denied message is displayed
			//-------------------------------------------------------------------------------
			String message = metadatacard.getMfilesDialogMessage();

			if (message.toUpperCase().contains("ACCESS DENIED"))
				Log.pass("Test case Passed. Access denied message dialog opened on rejected assignment in rightpane properties for non-assigned users. Message : " + message);
			else
				Log.fail("Test case Failed.  Access denied message dialog does not opened on rejecting assignment in rightpane properties for non-assigned users. Message : " + message, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_2D

	/**
	 * 104.1.59.2E : Reject option should not available in taskpanel for non-assigned users.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject option should not available in taskpanel for non-assigned users.")
	public void SprintTest104_1_59_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Create an assignment 
			//------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName);
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("ClassName")); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("1. New Assignment (" + assigName + ") is created.");

			//Step-2 : Log out and login with other user
			//------------------------------------------
			if (!Utility.logOut(driver))
				throw new Exception("Log out is not successful.");

			homePage = LoginPage.launchDriverAndLogin(driver, dataPool.get("UserName"), dataPool.get("Password"), testVault);

			Log.message("2. Logs in with " + dataPool.get("UserName") + " user.");

			//Step-4 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			Log.message("4. Navigated to '" + viewToNavigate + "' view.");

			//Step-5 : Select the assignment
			//------------------------------
			homePage.listView.clickItem(assigName);

			Log.message("5. Assignment (" + assigName + ") is selected.", driver);

			//Verification : Verify if Reject icon is available
			//--------------------------------------------------
			if (!homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value)) //Verifies if Reject icon is available
				Log.pass("Test case Passed. Reject is not available in taskpanel for non-assigned users.");
			else
				Log.fail("Test case Failed. Reject is available in taskpanel for non-assigned users.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest104_1_59_2E

	/**
	 * 172015.3.23.1A : User should be able to un-complete assignment in Metadatacard opened through context menu when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened through context menu when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through context menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through context menu
				//----------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through context menu.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened through context menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_1A

	/**
	 * 172015.3.23.1B : User should be able to un-complete assignment in Metadatacard opened through operations menu when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened through operations menu when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through operations menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through operations menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through operations menu.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened through operations menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_1B

	/**
	 * 172015.3.23.1C : User should be able to un-complete assignment in Metadatacard opened through taskpanel menu when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened through taskpanel menu when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through taskpanel menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened through taskpanel menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_1C

	/**
	 * 172015.3.23.1D : User should be able to un-complete assignment in Metadatacard opened in rightpane when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened in rightpane when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened in rightpane.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_1D

	/**
	 * 172015.3.23.2A : User should be able to un-reject assignment in Metadatacard opened through context menu when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened through context menu when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through context menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through context menu
				//----------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through context menu.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened through context menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_2A

	/**
	 * 172015.3.23.2B : User should be able to un-reject assignment in Metadatacard opened through operations menu when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened through operations menu when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through operations menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through operations menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through operations menu.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened through operations menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_2B

	/**
	 * 172015.3.23.2C : User should be able to un-reject assignment in Metadatacard opened through taskpanel menu when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened through taskpanel menu when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through taskpanel menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened through taskpanel menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_2C

	/**
	 * 172015.3.23.2D : User should be able to un-reject assignment in Metadatacard opened in rightpane when assignment is created with ‘Anyone can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened in rightpane when assignment is created with ‘Anyone can approve’ class.")
	public void SprintTest172015_3_23_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened in rightpane.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_23_2D

	/**
	 * 172015.3.24.1A : User should be able to un-complete assignment in Metadatacard opened through context menu when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened through context menu when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through context menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through context menu
				//----------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through context menu.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened through context menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_1A

	/**
	 * 172015.3.24.1B : User should be able to un-complete assignment in Metadatacard opened through operations menu when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened through operations menu when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through operations menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through operations menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through operations menu.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened through operations menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_1B

	/**
	 * 172015.3.24.1C : User should be able to un-complete assignment in Metadatacard opened through taskpanel menu when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened through taskpanel menu when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through taskpanel menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened through taskpanel menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_1C

	/**
	 * 172015.3.24.1D : User should be able to un-complete assignment in Metadatacard opened in rightpane when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-complete assignment in Metadatacard opened in rightpane when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Assignment is un-approved on clicking approved Approve icon in metadatacard opened in rightpane.");
				else
					Log.fail("Test case Failed. Assignment is not un-approved on clicking approved Approve icon in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_1D

	/**
	 * 172015.3.24.2A : User should be able to un-reject assignment in Metadatacard opened through context menu when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened through context menu when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through context menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through context menu
				//----------------------------------------------------------
				if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not right clicked.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through context menu.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened through context menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_2A

	/**
	 * 172015.3.24.2B : User should be able to un-reject assignment in Metadatacard opened through operations menu when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened through operations menu when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through operations menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through operations menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through operations menu.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened through operations menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_2B

	/**
	 * 172015.3.24.2C : User should be able to un-reject assignment in Metadatacard opened through taskpanel menu when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened through taskpanel menu when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
				//------------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment through taskpanel menu
				//----------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened through taskpanel menu.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened through taskpanel menu.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_2C

	/**
	 * 172015.3.24.2D : User should be able to un-reject assignment in Metadatacard opened in rightpane when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to un-reject assignment in Metadatacard opened in rightpane when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_24_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Reject icon again to un-reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Reject Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-reject assignment.", driver);

				//Verification : Verifies if Reject Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is rejected
					Log.pass("Test case Passed. Assignment is un-reject on clicking rejected Reject icon in metadatacard opened in rightpane.");
				else
					Log.fail("Test case Failed. Assignment is not un-reject on clicking rejected Reject icon in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_24_2D

	/**
	 * 172015.3.25.1A : Approve should be available in taskpanel after un-approving assignment in Metadatacard when assignment is created with ‘Any can approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve should be available in taskpanel after un-approving assignment in Metadatacard when assignment is created with ‘Any can approve’ class.")
	public void SprintTest172015_3_25_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") with class " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
					throw new Exception("'" + Caption.MenuItems.Approve.Value + "' is available in taskpanel after approving assignment."); 

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value)) //Checks if Assignment is approved
					Log.pass("Test case Passed. '" + Caption.MenuItems.Approve.Value + "' is available in taskpanel after un-approving assignment.");
				else
					Log.fail("Test case Failed. '" + Caption.MenuItems.Approve.Value + "' is not available in taskpanel after un-approving assignment..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_25_1A

	/**
	 * 172015.3.25.1B : Approve should be available in taskpanel after un-approving assignment in Metadatacard when assignment is created with ‘All must approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approve should be available in taskpanel after un-approving assignment in Metadatacard when assignment is created with ‘All must approve’ class.")
	public void SprintTest172015_3_25_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") with class " + Caption.Classes.AssignmentAllMustApprove.Value + " is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value))
					throw new Exception("'" + Caption.MenuItems.Approve.Value + "' is available in taskpanel after approving assignment."); 

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Open the Approved assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the approved assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Approve icon again to un-approve assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickApproveIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				Log.message("6. Approve icon is selected again to un-approve assignment.", driver);

				//Verification : Verifies if Mark Complete Icon is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Approve.Value)) //Checks if Assignment is approved
					Log.pass("Test case Passed. '" + Caption.MenuItems.Approve.Value + "' is available in taskpanel after un-approving assignment.");
				else
					Log.fail("Test case Failed. '" + Caption.MenuItems.Approve.Value + "' is not available in taskpanel after un-approving assignment..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_25_1B

	/**
	 * 172015.3.25.2A : Reject should be available in taskpanel after un-rejecting assignment in Metadatacard when assignment is created with ‘Any can Approve’ class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject should be available in taskpanel after un-rejecting assignment in Metadatacard when assignment is created with ‘Any can Approve’ class.")
	public void SprintTest172015_3_25_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") with class " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
					throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
					throw new Exception("'" + Caption.MenuItems.Reject.Value + "' is available in taskpanel after rejecting assignment."); 

				Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Rejected assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the Rejected assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Reject icon again to un-Reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-Reject assignment.", driver);

				//Verification : Verifies if Reject text is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value)) //Checks if Assignment is Rejected
					Log.pass("Test case Passed. '" + Caption.MenuItems.Reject.Value + "' is available in taskpanel after un-rejecting assignment.");
				else
					Log.fail("Test case Failed. '" + Caption.MenuItems.Reject.Value + "' is not available in taskpanel after un-rejecting assignment..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_25_2A

	/**
	 * 172015.3.25.2B : Reject should be available in taskpanel after un-rejecting assignment in Metadatacard when assignment is created with 'All must approve' class.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Reject should be available in taskpanel after un-rejecting assignment in Metadatacard when assignment is created with 'All must approve' class.")
	public void SprintTest172015_3_25_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") with class " + Caption.Classes.AssignmentAllMustApprove.Value + " is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
					throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value))
					throw new Exception("'" + Caption.MenuItems.Reject.Value + "' is available in taskpanel after rejecting assignment."); 

				Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

				//Step-5 : Open the Rejected assignment in right pane
				//---------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

				Log.message("5. Properties dialog of the Rejected assignment (" + assigName + ") is opened in rightpane.");

				//Step-6 : Click Reject icon again to un-Reject assignment
				//-----------------------------------------------------------
				if (!metadatacard.clickRejectIcon(false)) //Clicks Complete Assignment icon.
					throw new Exception("Reject icon is not clicked.");

				Log.message("6. Reject icon is selected again to un-Reject assignment.", driver);

				//Verification : Verifies if Reject text is displayed
				//----------------------------------------------------------
				metadatacard.saveAndClose(); //Saves the metdatacard

				if (homePage.taskPanel.isItemExists(Caption.MenuItems.Reject.Value)) //Checks if Assignment is Rejected
					Log.pass("Test case Passed. '" + Caption.MenuItems.Reject.Value + "' is available in taskpanel after un-rejecting assignment.");
				else
					Log.fail("Test case Failed. '" + Caption.MenuItems.Reject.Value + "' is not available in taskpanel after un-rejecting assignment..", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_25_2B

	/**
	 * 172015.3.32A : User should be able to Approve multiple assignments in metadatacard opened through context menu that has both class [All must approve and Any can approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Approve multiple assignments in metadatacard opened through context menu that has both class [All must approve and Any can approve]")
	public void SprintTest172015_3_32A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are approved in metadatacard opened through context menu.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not approved in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_32A

	/**
	 * 172015.3.32B : User should be able to Approve multiple assignments in metadatacard opened through operations menu that has both class [All must approve and Any can approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Approve multiple assignments in metadatacard opened through operations menu that has both class [All must approve and Any can approve]")
	public void SprintTest172015_3_32B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are approved in metadatacard opened through operations menu.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not approved in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_32B

	/**
	 * 172015.3.32C : User should be able to Approve multiple assignments in metadatacard opened through taskpanel menu that has both class [All must approve and Any can approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Approve multiple assignments in metadatacard opened through taskpanel menu that has both class [All must approve and Any can approve]")
	public void SprintTest172015_3_32C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are approved in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not approved in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_32C

	/**
	 * 172015.3.32D : User should be able to Approve multiple assignments in metadatacard opened in rightpanel that has both class [All must approve and Any can approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Approve multiple assignments in metadatacard opened in rightpanel that has both class [All must approve and Any can approve]")
	public void SprintTest172015_3_32D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickApproveIcon())
				throw new Exception("Approve icon is not selected.");

			Log.message("5. Approve icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are approved in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not approved in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_32D

	/**
	 * 172015.3.32E : User should be able to Approve multiple assignments in metadatacard opened in rightpanel that has both class [All must approve and Any can approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Approve multiple assignments in metadatacard opened in rightpanel that has both class [All must approve and Any can approve]")
	public void SprintTest172015_3_32E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Select the assignments of different class
			//---------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignments of different class are selected.", driver);

			//Step-5 : Select Approve icon for the multi-selected assignments
			//---------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel

			Log.message("5. Approve is selected from taskapnel.", driver);

			//Verification : Verifies if assignments are approved
			//-----------------------------------------------------
			if (ListView.isApprovedByItemName(driver, assigName1) && ListView.isApprovedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are approved in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not approved in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_32E

	/**
	 * 172015.3.33A : User should be able to Reject multiple assignments in metadatacard opened through context menu that has both class [All must Approve and Any can Approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Reject multiple assignments in metadatacard opened through context menu that has both class [All must Approve and Any can Approve]")
	public void SprintTest172015_3_33A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through context menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.listView.rightClickItem(assigName2);
			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through context menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are Rejected in metadatacard opened through context menu.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not Rejected in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_33A

	/**
	 * 172015.3.33B : User should be able to Reject multiple assignments in metadatacard opened through operations menu that has both class [All must Approve and Any can Approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Reject multiple assignments in metadatacard opened through operations menu that has both class [All must Approve and Any can Approve]")
	public void SprintTest172015_3_33B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through operations menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through operations menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are Rejected in metadatacard opened through operations menu.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not Rejected in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_33B

	/**
	 * 172015.3.33C : User should be able to Reject multiple assignments in metadatacard opened through taskpanel menu that has both class [All must Approve and Any can Approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Reject multiple assignments in metadatacard opened through taskpanel menu that has both class [All must Approve and Any can Approve]")
	public void SprintTest172015_3_33C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);
			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are Rejected in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not Rejected in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_33C

	/**
	 * 172015.3.33D : User should be able to Reject multiple assignments in metadatacard opened in rightpanel that has both class [All must Approve and Any can Approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Reject multiple assignments in metadatacard opened in rightpanel that has both class [All must Approve and Any can Approve]")
	public void SprintTest172015_3_33D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Open the Properties dialog of the assignment and document through taskpanel menu
			//----------------------------------------------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of document and assignment is opened through taskpanel menu.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			if (!metadatacard.clickRejectIcon())
				throw new Exception("Reject icon is not selected.");

			Log.message("5. Reject icon is selected", driver);

			//Verification : Verifies if assigned to property has value varies
			//----------------------------------------------------------------
			metadatacard.saveAndClose(); //Saves the metadatacard

			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are Rejected in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not Rejected in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_33D

	/**
	 * 172015.3.33E : User should be able to Reject multiple assignments in metadatacard opened in rightpanel that has both class [All must Approve and Any can Approve]
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "User should be able to Reject multiple assignments in metadatacard opened in rightpanel that has both class [All must Approve and Any can Approve]")
	public void SprintTest172015_3_33E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Create an assignment with two assigned to users
			//--------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName1 =  Utility.getObjectName(methodName) + "_1";
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName1); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("2. New Assignment (" + assigName1 + ") is created with class (" + Caption.Classes.AssignmentAllMustApprove.Value + ") is crated.");

			//Step-3 : Create an assignment with one assigned to user
			//-------------------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName2 =  Utility.getObjectName(methodName).toString() + "_2"; //Name of the object with current method date & time
			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Assignment name
			metadatacard.setPropertyValue("Name or title", assigName2); //Sets the Assignment name
			Utils.fluentWait(driver);
			metadatacard.setPropertyValue("Assigned to", dataPool.get("UserFullName1")); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			Log.message("3. New Assignment (" + assigName2 + ") is created with class (" + Caption.Classes.AssignmentAnyoneCanApprove.Value + ") is crated.");

			//Step-4 : Select the assignments of different class
			//---------------------------------------------------
			String assignName = assigName1 + "\n" + assigName2;
			homePage.listView.clickMultipleItems(assignName);

			Log.message("4. Assignments of different class are selected.", driver);

			//Step-5 : Select Reject icon for the multi-selected assignments
			//---------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			Log.message("5. Reject is selected from taskapnel.", driver);

			//Verification : Verifies if assignments are Rejected
			//-----------------------------------------------------
			if (ListView.isRejectedByItemName(driver, assigName1) && ListView.isRejectedByItemName(driver, assigName2)) //Checks if Assignment completed icon is displayed
				Log.pass("Test case Passed. Assignments with two different classes are Rejected in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Assignments with two different classes are not Rejected in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_33E

	/**
	 * 172015.3.37A : Making copy for an approved assignment with All must approve class should also be in an approved state.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Making copy for an approved assignment with All must approve class should also be in an approved state.")
	public void SprintTest172015_3_37A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Select the approved assignment and select Make copy from Taskpanel
				//---------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.MakeCopy.Value); //Selects Make copy from task panel

				Log.message("5. Approved assignment (" + assigName + ") is selected and Make copy is selected from taskpanel.");

				//Step-6 : Save the metadatacard
				//------------------------------
				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				String newAssigName = assigName + "-Copy";
				metadatacard.setPropertyValue("Name or title", newAssigName); //Sets Name or title to new assignment
				metadatacard.saveAndClose(); //Saves and Close assignment.

				if (!homePage.listView.isItemExists(newAssigName))
					throw new Exception("New copied assignment (" + newAssigName + ") is not created.");

				Log.message("6. New copied assignment (" + newAssigName + ") is created.");

				//Verification : Verify if copied assignment is in approved state
				//----------------------------------------------------------
				if (ListView.getMarkedAsCompleteByItemName(driver, newAssigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Copied assignment is approved state with 'All must approve' class.");
				else
					Log.fail("Test case Failed. Copied assignment is not in approved state with 'All must approve' class.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_37A

	/**
	 * 172015.3.37B : Making copy for an rejected assignment with All must approve class should also be in an rejected state.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Making copy for an rejected assignment with All must approve class should also be in an rejected state.")
	public void SprintTest172015_3_37B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Approve icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Select the rejected assignment and select Make copy from Taskpanel
				//---------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.MakeCopy.Value); //Selects Make copy from task panel

				Log.message("5. Rejected assignment (" + assigName + ") is selected and Make copy is selected from taskpanel.");

				//Step-6 : Save the metadatacard
				//------------------------------
				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				String newAssigName = assigName + "-Copy";
				metadatacard.setPropertyValue("Name or title", newAssigName); //Sets Name or title to new assignment
				metadatacard.saveAndClose(); //Saves and Close assignment.

				if (!homePage.listView.isItemExists(newAssigName))
					throw new Exception("New copied assignment (" + newAssigName + ") is not created.");

				Log.message("6. New copied assignment (" + newAssigName + ") is created.");

				//Verification : Verify if copied assignment is in rejected state
				//----------------------------------------------------------
				if (ListView.getRejectedByItemName(driver, newAssigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Copied assignment is rejected state with 'All must approve' class.");
				else
					Log.fail("Test case Failed. Copied assignment is not in rejected state with 'All must approve' class.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_37B

	/**
	 * 172015.3.37C : Making copy for an un-approved/un-rejected assignment with All must approve class should also be in the same state.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Making copy for an un-approved/un-rejected assignment with All must approve class should also be in the same state.")
	public void SprintTest172015_3_37C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Select the new assignment and select Make copy from Taskpanel
				//---------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.MakeCopy.Value); //Selects Make copy from task panel

				Log.message("5. Rejected assignment (" + assigName + ") is selected and Make copy is selected from taskpanel.");

				//Step-4 : Save the metadatacard
				//------------------------------
				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				String newAssigName = assigName + "-Copy";
				metadatacard.setPropertyValue("Name or title", newAssigName); //Sets Name or title to new assignment
				metadatacard.saveAndClose(); //Saves and Close assignment.

				if (!homePage.listView.isItemExists(newAssigName))
					throw new Exception("New copied assignment (" + newAssigName + ") is not created.");

				Log.message("4. New copied assignment (" + newAssigName + ") is created.");

				//Verification : Verify if copied assignment is as source assignment
				//-------------------------------------------------------------------
				if (ListView.getRejectedByItemName(driver, newAssigName).equalsIgnoreCase("") && 
						ListView.getMarkedAsCompleteByItemName(driver, newAssigName).equalsIgnoreCase("")) //Checks if Assignment is approved
					Log.pass("Test case Passed. Copied assignment is neither in approved nor in rejected state with 'All must approve' class.");
				else
					Log.fail("Test case Failed. Copied assignment is either in approved or in rejected state with 'All must approve' class.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_37C

	/**
	 * 172015.3.38A : Making copy for an approved assignment with Any one can approve class should also be in an approved state.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Making copy for an approved assignment with Any one can approve class should also be in an approved state.")
	public void SprintTest172015_3_38A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Mark Complete the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
					throw new Exception("Approve icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

				//Step-5 : Select the approved assignment and select Make copy from Taskpanel
				//---------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.MakeCopy.Value); //Selects Make copy from task panel

				Log.message("5. Approved assignment (" + assigName + ") is selected and Make copy is selected from taskpanel.");

				//Step-6 : Save the metadatacard
				//------------------------------
				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				String newAssigName = assigName + "-Copy";
				metadatacard.setPropertyValue("Name or title", newAssigName); //Sets Name or title to new assignment
				metadatacard.saveAndClose(); //Saves and Close assignment.

				if (!homePage.listView.isItemExists(newAssigName))
					throw new Exception("New copied assignment (" + newAssigName + ") is not created.");

				Log.message("6. New copied assignment (" + newAssigName + ") is created.");

				//Verification : Verify if copied assignment is in approved state
				//----------------------------------------------------------
				if (ListView.getMarkedAsCompleteByItemName(driver, newAssigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Copied assignment is approved state with 'Any one can approve' class.");
				else
					Log.fail("Test case Failed. Copied assignment is not in approved state with 'Any one can approve' class.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_38A

	/**
	 * 172015.3.38B : Making copy for an rejected assignment with Any one can approve class should also be in an rejected state.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Making copy for an rejected assignment with Any one can approve class should also be in an rejected state.")
	public void SprintTest172015_3_38B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Open the Properties dialog of the new assignment in right pane
				//-----------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

				Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in rightpane.");

				//Step-4 : Reject the newly created assignment
				//----------------------------------------------------
				if (!metadatacard.clickRejectIcon()) //Clicks Approve icon.
					throw new Exception("Reject icon is not clicked.");

				metadatacard.saveAndClose(); //Saves the metdatacard

				if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					throw new Exception("Assignment (" + assigName + ") is not rejected by user (" + userFullName + ").");

				Log.message("4. Assignment (" + assigName + ") is rejected by user (" + userFullName + ").", driver);

				//Step-5 : Select the rejected assignment and select Make copy from Taskpanel
				//---------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.MakeCopy.Value); //Selects Make copy from task panel

				Log.message("5. Rejected assignment (" + assigName + ") is selected and Make copy is selected from taskpanel.");

				//Step-6 : Save the metadatacard
				//------------------------------
				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				String newAssigName = assigName + "-Copy";
				metadatacard.setPropertyValue("Name or title", newAssigName); //Sets Name or title to new assignment
				metadatacard.saveAndClose(); //Saves and Close assignment.

				if (!homePage.listView.isItemExists(newAssigName))
					throw new Exception("New copied assignment (" + newAssigName + ") is not created.");

				Log.message("6. New copied assignment (" + newAssigName + ") is created.");

				//Verification : Verify if copied assignment is in rejected state
				//----------------------------------------------------------
				if (ListView.getRejectedByItemName(driver, newAssigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
					Log.pass("Test case Passed. Copied assignment is rejected state with 'Any one can approve' class.");
				else
					Log.fail("Test case Failed. Copied assignment is not in rejected state with 'Any one can approve' class.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_38B

	/**
	 * 172015.3.38C : Making copy for an un-approved/un-rejected assignment with Any one can approve class should also be in the same state.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Making copy for an un-approved/un-rejected assignment with Any one can approve class should also be in the same state.")
	public void SprintTest172015_3_38C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2);; //Sets the assigned to property

				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

				if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
					throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

				Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users.");

				//Step-3 : Select the new assignment and select Make copy from Taskpanel
				//---------------------------------------------------------------------------
				if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
					throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

				homePage.taskPanel.clickItem(Caption.MenuItems.MakeCopy.Value); //Selects Make copy from task panel

				Log.message("5. Rejected assignment (" + assigName + ") is selected and Make copy is selected from taskpanel.");

				//Step-4 : Save the metadatacard
				//------------------------------
				metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				String newAssigName = assigName + "-Copy";
				metadatacard.setPropertyValue("Name or title", newAssigName); //Sets Name or title to new assignment
				metadatacard.saveAndClose(); //Saves and Close assignment.

				if (!homePage.listView.isItemExists(newAssigName))
					throw new Exception("New copied assignment (" + newAssigName + ") is not created.");

				Log.message("4. New copied assignment (" + newAssigName + ") is created.");

				//Verification : Verify if copied assignment is as source assignment
				//-------------------------------------------------------------------
				if (ListView.getRejectedByItemName(driver, newAssigName).equalsIgnoreCase("") && 
						ListView.getMarkedAsCompleteByItemName(driver, newAssigName).equalsIgnoreCase("")) //Checks if Assignment is approved
					Log.pass("Test case Passed. Copied assignment is neither in approved nor in rejected state with 'Any one can approve' class.");
				else
					Log.fail("Test case Failed. Copied assignment is either in approved or in rejected state with 'Any one can approve' class.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_38C

	/**
	 * 172015.3.58A : Approved assignment should remain same on changing the class in metdatacard through context menu.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignment should remain same on changing the class in metdatacard through context menu.")
	public void SprintTest172015_3_58A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment from context menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Approve the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the approved assignment
			//----------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approved assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Approved assignment is in same state after changing its class in metadatacard opened through context menu.");
			else
				Log.fail("Test case Failed. Approved assignment is not in same state after changing its class in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_58A

	/**
	 * 172015.3.58B : Approved assignment should remain same on changing the class in metdatacard through operations menu.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignment should remain same on changing the class in metdatacard through operations menu.")
	public void SprintTest172015_3_58B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment from operations menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Approve the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the approved assignment
			//----------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approved assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Approved assignment is in same state after changing its class in metadatacard opened through operations menu.");
			else
				Log.fail("Test case Failed. Approved assignment is not in same state after changing its class in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_58B

	/**
	 * 172015.3.58C : Approved assignment should remain same on changing the class in metdatacard through taskpanel menu.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignment should remain same on changing the class in metdatacard through taskpanel menu.")
	public void SprintTest172015_3_58C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment from taskpanel menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Approve the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the approved assignment
			//----------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approved assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Approved assignment is in same state after changing its class in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Approved assignment is not in same state after changing its class in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_58C

	/**
	 * 172015.3.58D : Approved assignment should remain same on changing the class in metdatacard in rightpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Approved assignment should remain same on changing the class in metdatacard through  in rightpane.")
	public void SprintTest172015_3_58D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment  in rightpane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened  in rightpane.");

			//Step-4 : Approve the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the approved assignment
			//----------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approved assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Approved assignment is in same state after changing its class in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Approved assignment is not in same state after changing its class in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_58D

	/**
	 * 172015.3.58E : Assignment should remain same on changing the class after approving through taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should remain same on changing the class after approving through taskpanel.")
	public void SprintTest172015_3_58E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Approve the newly created assignment through taskpanel
			//--------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel //Selects Approve from taskpanel

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the approved assignment
			//----------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approved assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Approved assignment is in same state after changing its class in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Approved assignment is not in same state after changing its class in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_58E

	/**
	 * 172015.3.59A : Rejected assignment should remain same on changing the class in metdatacard through context menu.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Rejected assignment should remain same on changing the class in metdatacard through context menu.")
	public void SprintTest172015_3_59A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment from context menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the Rejected assignment
			//----------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Rejected assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Rejected assignment is in same state after changing its class in metadatacard opened through context menu.");
			else
				Log.fail("Test case Failed. Rejected assignment is not in same state after changing its class in metadatacard opened through context menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_59A

	/**
	 * 172015.3.59B : Rejected assignment should remain same on changing the class in metdatacard through operations menu.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Rejected assignment should remain same on changing the class in metdatacard through operations menu.")
	public void SprintTest172015_3_59B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment from operations menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the Rejected assignment
			//----------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Selects Properties from operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Rejected assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Rejected assignment is in same state after changing its class in metadatacard opened through operations menu.");
			else
				Log.fail("Test case Failed. Rejected assignment is not in same state after changing its class in metadatacard opened through operations menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_59B

	/**
	 * 172015.3.59C : Rejected assignment should remain same on changing the class in metdatacard through taskpanel menu.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Rejected assignment should remain same on changing the class in metdatacard through taskpanel menu.")
	public void SprintTest172015_3_59C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment from taskpanel menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the Rejected assignment
			//----------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Selects Properties from taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Rejected assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Rejected assignment is in same state after changing its class in metadatacard opened through taskpanel menu.");
			else
				Log.fail("Test case Failed. Rejected assignment is not in same state after changing its class in metadatacard opened through taskpanel menu.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_59C

	/**
	 * 172015.3.59D : Rejected assignment should remain same on changing the class in metdatacard in rightpane
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Rejected assignment should remain same on changing the class in metdatacard through  in rightpane.")
	public void SprintTest172015_3_59D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Open the Properties dialog of the new assignment  in rightpane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened  in rightpane.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the Rejected assignment
			//----------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Rejected assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Rejected assignment is in same state after changing its class in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Rejected assignment is not in same state after changing its class in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_59D

	/**
	 * 172015.3.59E : Assignment should remain same on changing the class after rejecting through taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should remain same on changing the class after rejecting through taskpanel.")
	public void SprintTest172015_3_59E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class1")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class1") + ").");

			//Step-3 : Reject the newly created assignment through taskpanel
			//--------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel//Selects Reject from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Change the class of the Rejected assignment
			//----------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			metadatacard.setPropertyValue("Class", dataPool.get("Class2")); //Sets the Class name
			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Rejected assignment (" + assigName + ") class is changed to '" + dataPool.get("Class2") + "' and saved.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Rejected assignment is in same state after changing its class in metadatacard opened in rightpane.");
			else
				Log.fail("Test case Failed. Rejected assignment is not in same state after changing its class in metadatacard opened in rightpane.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_59E

	/**
	 * 172015.3.60.1A : Assignment should get approved in metadatadatacard after checking out.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should get approved in metadatadatacard after checking out.")
	public void SprintTest172015_3_60_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment from context menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-5 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approve icon for assignment (" + assigName + ") in metadatacard is selected and saved.", driver);

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in approved state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in approved state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_1A

	/**
	 * 172015.3.60.1B : Assignment should get approved in rightpane after checking out.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should get approved in rightpane after checking out.")
	public void SprintTest172015_3_60_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-5 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Approve icon for assignment (" + assigName + ") in rightpane is selected and saved.", driver);

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in approved state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in approved state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_1B

	/**
	 * 172015.3.60.1C : Assignment should get approved in taskpanel after checking out.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should get approved in taskpanel after checking out.")
	public void SprintTest172015_3_60_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel

			Log.message("5. Approve assignment (" + assigName + ") in taskpanel is selected.", driver);

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in approved state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in approved state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_1C

	/**
	 * 172015.3.60.1D : Assignment that is created in checked-out mode should get approved in metadatacard.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode should get approved in metadatacard.")
	public void SprintTest172015_3_60_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the metadatacard of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("4. Approve icon for assignment (" + assigName + ") in rightpane is selected and saved.", driver);

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in approved state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in approved state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_1D

	/**
	 * 172015.3.60.1E : Assignment that is created in checked-out mode should get approved in taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode should get approved in taskpanel")
	public void SprintTest172015_3_60_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Approve the checked out assignment
			//--------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel

			Log.message("4. Approve for assignment (" + assigName + ") in taskpanel is selected.", driver);

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in approved state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in approved state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_1E

	/**
	 * 172015.3.60.2A : Checked out Approved Assignment through metadatacard should be in approved state after performing check in operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Approved Assignment through metadatacard should be in approved state after performing check in operation.")
	public void SprintTest172015_3_60_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-5 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("5. Assignment (" + assigName + ") is approved in rightpane.", driver);

			//Step-6 : Check in the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("6. Approved assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out approved assignment (" + assigName + ") through metadatacard is in approved state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Checked out approved assignment (" + assigName + ") through metadatacard is not in approved state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_2A

	/**
	 * 172015.3.60.2B : Checked out Approved Assignment through taskpanel should be in approved state after performing check in operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Approved Assignment through taskpanel should be in approved state after performing check in operation.")
	public void SprintTest172015_3_60_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Approve the checked out assignment through taskapanel
			//--------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel//Clicks Approve from taskpanel

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Checked out assignment (" + assigName + "). is approved through taskpanel.", driver);

			//Step-5 : Check in the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("5. Approved assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out approved assignment (" + assigName + ") through taskpanel is in approved state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Checked out approved assignment (" + assigName + ") through taskpanel is not in approved state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_2B

	/**
	 * 172015.3.60.2C : Assignment that is created in checked-out that is approved in metadatacard and remain same after perfomring check-in operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out that is approved in metadatacard and remain same after perfomring check-in operation.")
	public void SprintTest172015_3_60_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Checked out assignment (" + assigName + ") is approved in rightpane.", driver);

			//Step-5 : Check in the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("5. Approved assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard is in approved state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard is not in approved state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_2C

	/**
	 * 172015.3.60.2D : Assignment that is created in checked-out that is approved in taskpanel and remain same after perfomring check-in operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out that is approved in taskpanel and remain same after perfomring check-in operation.")
	public void SprintTest172015_3_60_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Approve the checked out assignment through taskapanel
			//--------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel//Clicks Approve from taskpanel

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("3. Checked out assignment (" + assigName + "). is approved through taskpanel.", driver);

			//Step-4 : Check in the approved assignment
			//------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("4. Approved assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard is in approved state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard is not in approved state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_2D

	/**
	 * 172015.3.60.3A : Checked out Approved Assignment through metadatacard should be in un-approved state after performing undo-checkout operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Approved Assignment through metadatacard should be in un-approved state after performing undo-checkout operation.")
	public void SprintTest172015_3_60_3A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Metadatacard of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-5 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("5. Assignment (" + assigName + ") is approved in rightpane.", driver);

			//Step-6 : Undo-Checkout the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("6. Approved assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out approved assignment (" + assigName + ") through metadatacard is in un-approved state after performing undo check out operation.");
			else
				Log.fail("Test case Failed. Checked out approved assignment (" + assigName + ") through metadatacard is in approved state after performing undo check out operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_3A

	/**
	 * 172015.3.60.3B : Checked out Approved Assignment in taskpanel should be in un-approved state after performing undo-checkout operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Approved Assignment in taskpanel should be in un-approved state after performing undo-checkout operation.")
	public void SprintTest172015_3_60_3B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel  //Selects Approve from taskpanel

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("5. Assignment (" + assigName + ") is approved from taskpanel.", driver);

			//Step-6 : Undo-Checkout the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("6. Approved assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Checked out approved assignment (" + assigName + ") through metadatacard is in un-approved state after performing undo check out operation.");
			else
				Log.fail("Test case Failed. Checked out approved assignment (" + assigName + ") through metadatacard is in approved state after performing undo check out operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_3B

	/**
	 * 172015.3.60.3C : Assignment that is created in checked-out mode that is approved through rightpane gets disappeared on performing undo-checkout operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode that is approved through rightpane gets disappeared on performing undo-checkout operation.")
	public void SprintTest172015_3_60_3C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Approve the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Checked out assignment (" + assigName + ") is approved in rightpane.", driver);

			//Step-6 : Undo-Checkout the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("6. Approved assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			if (!homePage.listView.isItemExists(assigName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard does not exists in list after performing undo-checkout operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard exists in list after performing undo-checkout operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_3C

	/**
	 * 172015.3.60.3D: Assignment that is created in checked-out mode that is approved in taskpanel gets disappeared on performing undo-checkout operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode that is approved in taskpanel gets disappeared on performing undo-checkout operation.")
	public void SprintTest172015_3_60_3D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve"); //Marks Approve from Taskpanel 

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Checked out assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("3. Checked out assignment (" + assigName + ") is approved through taskpanel.", driver);

			//Step-4 : Undo-Checkout the approved assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("4. Approved assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in approved state
			//----------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			if (!homePage.listView.isItemExists(assigName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard does not exists in list after performing undo-checkout operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and approved through metadatacard exists in list after performing undo-checkout operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_60_3D

	/**
	 * 172015.3.61.1A : Assignment should get Rejected in metadatadatacard after checking out.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should get Rejected in metadatadatacard after checking out.")
	public void SprintTest172015_3_61_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment from context menu
			//-----------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Selects Properties from context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-5 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Reject icon for assignment (" + assigName + ") in metadatacard is selected and saved.", driver);

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in Rejected state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in Rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_1A

	/**
	 * 172015.3.61.1B : Assignment should get Rejected in rightpane after checking out.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should get Rejected in rightpane after checking out.")
	public void SprintTest172015_3_61_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-5 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("5. Reject icon for assignment (" + assigName + ") in rightpane is selected and saved.", driver);

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in Rejected state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in Rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_1B

	/**
	 * 172015.3.61.1C : Assignment should get Rejected in taskpanel after checking out.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment should get Rejected in taskpanel after checking out.")
	public void SprintTest172015_3_61_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			Log.message("5. Reject assignment (" + assigName + ") in taskpanel is selected.", driver);

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in Rejected state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in Rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_1C

	/**
	 * 172015.3.61.1D : Assignment that is created in checked-out mode should get Rejected in metadatacard.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode should get Rejected in metadatacard.")
	public void SprintTest172015_3_61_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the metadatacard of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			Log.message("4. Reject icon for assignment (" + assigName + ") in rightpane is selected and saved.", driver);

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in Rejected state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in Rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_1D

	/**
	 * 172015.3.61.1E : Assignment that is created in checked-out mode should get Rejected in taskpanel
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode should get Rejected in taskpanel")
	public void SprintTest172015_3_61_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Reject the checked out assignment
			//--------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			Log.message("4. Reject for assignment (" + assigName + ") in taskpanel is selected.", driver);

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Assignment (" + assigName + ") is in Rejected state.");
			else
				Log.fail("Test case Failed. Checked out Assignment (" + assigName + ") is not in Rejected state.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_1E

	/**
	 * 172015.3.61.2A : Checked out Rejected Assignment through metadatacard should be in Rejected state after performing check in operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Rejected Assignment through metadatacard should be in Rejected state after performing check in operation.")
	public void SprintTest172015_3_61_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-5 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("5. Assignment (" + assigName + ") is Rejected in rightpane.", driver);

			//Step-6 : Check in the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("6. Rejected assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Rejected assignment (" + assigName + ") through metadatacard is in Rejected state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Checked out Rejected assignment (" + assigName + ") through metadatacard is not in Rejected state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_2A

	/**
	 * 172015.3.61.2B : Checked out Rejected Assignment through taskpanel should be in Rejected state after performing check in operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Rejected Assignment through taskpanel should be in Rejected state after performing check in operation.")
	public void SprintTest172015_3_61_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Reject the checked out assignment through taskapanel
			//--------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel//Clicks Reject from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Checked out assignment (" + assigName + "). is Rejected through taskpanel.", driver);

			//Step-5 : Check in the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("5. Rejected assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Rejected assignment (" + assigName + ") through taskpanel is in Rejected state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Checked out Rejected assignment (" + assigName + ") through taskpanel is not in Rejected state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_2B

	/**
	 * 172015.3.61.2C : Assignment that is created in checked-out that is Rejected in metadatacard and remain same after perfomring check-in operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out that is Rejected in metadatacard and remain same after perfomring check-in operation.")
	public void SprintTest172015_3_61_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Checked out assignment (" + assigName + ") is Rejected in rightpane.", driver);

			//Step-5 : Check in the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("5. Rejected assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard is in Rejected state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard is not in Rejected state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_2C

	/**
	 * 172015.3.61.2D : Assignment that is created in checked-out that is Rejected in taskpanel and remain same after perfomring check-in operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out that is Rejected in taskpanel and remain same after perfomring check-in operation.")
	public void SprintTest172015_3_61_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Reject the checked out assignment through taskapanel
			//--------------------------------------------------------------
			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel//Clicks Reject from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("3. Checked out assignment (" + assigName + "). is Rejected through taskpanel.", driver);

			//Step-4 : Check in the Rejected assignment
			//------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckIn.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked in.");

			Log.message("4. Rejected assignment (" + assigName + ") is checked in.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard is in Rejected state after performing check-in operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard is not in Rejected state after performing check-in operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_2D

	/**
	 * 172015.3.61.3A : Checked out Rejected Assignment through metadatacard should be in un-Rejected state after performing undo-checkout operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Rejected Assignment through metadatacard should be in un-Rejected state after performing undo-checkout operation.")
	public void SprintTest172015_3_61_3A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Metadatacard of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-5 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("5. Assignment (" + assigName + ") is Rejected in rightpane.", driver);

			//Step-6 : Undo-Checkout the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("6. Rejected assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Rejected assignment (" + assigName + ") through metadatacard is in un-Rejected state after performing undo check out operation.");
			else
				Log.fail("Test case Failed. Checked out Rejected assignment (" + assigName + ") through metadatacard is in Rejected state after performing undo check out operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_3A

	/**
	 * 172015.3.61.3B : Checked out Rejected Assignment in taskpanel should be in un-Rejected state after performing undo-checkout operation.
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Checked out Rejected Assignment in taskpanel should be in un-Rejected state after performing undo-checkout operation.")
	public void SprintTest172015_3_61_3B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ").");

			//Step-3 : Check out the newly created assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.CheckOut.Value); //Selects Checkout from taskpanel menu

			if (!ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not checked out.");

			Log.message("3. Assignment (" + assigName + ") is checked out.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel //Selects Reject from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("5. Assignment (" + assigName + ") is Rejected from taskpanel.", driver);

			//Step-6 : Undo-Checkout the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("6. Rejected assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Checked out Rejected assignment (" + assigName + ") through metadatacard is in un-Rejected state after performing undo check out operation.");
			else
				Log.fail("Test case Failed. Checked out Rejected assignment (" + assigName + ") through metadatacard is in Rejected state after performing undo check out operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_3B

	/**
	 * 172015.3.61.3C : Assignment that is created in checked-out mode that is Rejected through rightpane gets disappeared on performing undo-checkout operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode that is Rejected through rightpane gets disappeared on performing undo-checkout operation.")
	public void SprintTest172015_3_61_3C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Properties dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Reject the checked out assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Reject Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Checked out assignment (" + assigName + ") is Rejected in rightpane.", driver);

			//Step-6 : Undo-Checkout the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("6. Rejected assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			if (!homePage.listView.isItemExists(assigName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard does not exists in list after performing undo-checkout operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard exists in list after performing undo-checkout operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_3C

	/**
	 * 172015.3.61.3D: Assignment that is created in checked-out mode that is Rejected in taskpanel gets disappeared on performing undo-checkout operation
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Assignment that is created in checked-out mode that is Rejected in taskpanel gets disappeared on performing undo-checkout operation.")
	public void SprintTest172015_3_61_3D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", dataPool.get("Class")); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
			metadatacard.setCheckInImmediately(false);
			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with class (" + dataPool.get("Class") + ") in checked out mode.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-----------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Checked out assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("3. Checked out assignment (" + assigName + ") is Rejected through taskpanel.", driver);

			//Step-4 : Undo-Checkout the Rejected assignment
			//-----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.UndoCheckOut.Value); //Selects Checkout from taskpanel menu

			if (ListView.isCheckedOutByItemName(driver, assigName))
				throw new Exception("Assignment (" + assigName + ") is not undo checked out.");

			Log.message("4. Rejected assignment (" + assigName + ") is undo-checked out.");

			//Verification : Verify if checked out assignment is in Rejected state
			//----------------------------------------------------------------------
			SearchPanel.searchOrNavigatetoView(driver, Caption.Search.SearchOnlyAssignments.Value, assigName);

			if (!homePage.listView.isItemExists(assigName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard does not exists in list after performing undo-checkout operation.");
			else
				Log.fail("Test case Failed. Assignment(" + assigName + ") created in checked out mode and Rejected through metadatacard exists in list after performing undo-checkout operation.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_61_3D

	/**
	 * 172015.3.67.1A : Other Assignees should be removed in metadatacard opened through context menu on approving the assignment with one user on using Assignment any can approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened through context menu on approving the assignment with one user on using Assignment any can approve class.")
	public void SprintTest172015_3_67_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after approving the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Other Assignes are successfully removed on approving assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after approving the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_1A

	/**
	 * 172015.3.67.1B : Other Assignees should be removed in metadatacard opened through operations menu on approving the assignment with one user on using Assignment any can approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened through operations menu on approving the assignment with one user on using Assignment any can approve class.")
	public void SprintTest172015_3_67_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operation menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operation menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after approving the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Other Assignes are successfully removed on approving assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after approving the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_1B

	/**
	 * 172015.3.67.1C : Other Assignees should be removed in metadatacard opened through taskpanel menu on approving the assignment with one user on using Assignment any can approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened through taskpanel menu on approving the assignment with one user on using Assignment any can approve class.")
	public void SprintTest172015_3_67_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after approving the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Other Assignes are successfully removed on approving assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after approving the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_1C

	/**
	 * 172015.3.67.1D : Other Assignees should be removed in metadatacard opened in right pane on approving the assignment with one user on using Assignment any can approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened in right pane on approving the assignment with one user on using Assignment any can approve class")
	public void SprintTest172015_3_67_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after approving the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Other Assignes are successfully removed on approving assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after approving the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_1D

	/**
	 * 172015.3.67.1E : Other Assignees should be removed from metadatacard after approving the assignment with one user in taskpanel on using Assignment any can approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed from metadatacard after approving the assignment with one user in taskpanel on using Assignment any can approve class")
	public void SprintTest172015_3_67_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Approve the assignment from taskpanel
			//----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve");

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after approving the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				Log.pass("Test case Passed. Other Assignes are successfully removed on approving assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after approving the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_1E

	/**
	 * 172015.3.67.2A : Other Assignees should be removed in metadatacard opened through context menu on Rejecting the assignment with one user on using Assignment any can Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened through context menu on Rejecting the assignment with one user on using Assignment any can Reject class.")
	public void SprintTest172015_3_67_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after Rejecting the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Other Assignes are successfully removed on Rejecting assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after Rejecting the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_2A

	/**
	 * 172015.3.67.2B : Other Assignees should be removed in metadatacard opened through operations menu on Rejecting the assignment with one user on using Assignment any can Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened through operations menu on Rejecting the assignment with one user on using Assignment any can Reject class.")
	public void SprintTest172015_3_67_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operation menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operation menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after Rejecting the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Other Assignes are successfully removed on Rejecting assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after Rejecting the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_2B

	/**
	 * 172015.3.67.2C : Other Assignees should be removed in metadatacard opened through taskpanel menu on Rejecting the assignment with one user on using Assignment any can Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened through taskpanel menu on Rejecting the assignment with one user on using Assignment any can Reject class.")
	public void SprintTest172015_3_67_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after Rejecting the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Other Assignes are successfully removed on Rejecting assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after Rejecting the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_2C

	/**
	 * 172015.3.67.2D : Other Assignees should be removed in metadatacard opened in right pane on Rejecting the assignment with one user on using Assignment any can Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed in metadatacard opened in right pane on Rejecting the assignment with one user on using Assignment any can Reject class")
	public void SprintTest172015_3_67_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Step-4 : Reject the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after Rejecting the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Other Assignes are successfully removed on Rejecting assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after Rejecting the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_2D

	/**
	 * 172015.3.67.2E : Other Assignees should be removed from metadatacard after Rejecting the assignment with one user in taskpanel on using Assignment any can Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be removed from metadatacard after Rejecting the assignment with one user in taskpanel on using Assignment any can Reject class")
	public void SprintTest172015_3_67_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAnyoneCanApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAnyoneCanApprove.Value + " class.");

			//Step-3 : Reject the assignment from taskpanel
			//----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Reject"); //Selects Reject from taskpanel

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");

			if (assignedToValues.size() != 1)
				throw new Exception("Test case Failed. Multiple values to property assigned to are available after Rejecting the assignment. No of users listed : " + assignedToValues.size());

			if (assignedToValues.get(0).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				Log.pass("Test case Passed. Other Assignes are successfully removed on Rejecting assignment by the user.");
			else
				Log.fail("Test case Failed. Assigned user name in metadatacard is different after Rejecting the assingnment.", driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_67_2E

	/**
	 * 172015.3.68.1A : Other Assignees should be available in metadatacard opened through context menu on approving the assignment with one user on using Assignment all must approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened through context menu on approving the assignment with one user on using Assignment all must approve class.")
	public void SprintTest172015_3_68_1A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before approving : " + userList.length + "; After Approving : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after approving assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on approving assignment by one user in metadatacard opening through context menu.");
			else
				Log.fail("Test case Failed. All Assignes are not available on approving assignment by one user in metadatacard opening through context menu." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_1A

	/**
	 * 172015.3.68.1B : Other Assignees should be available in metadatacard opened through operations menu on approving the assignment with one user on using Assignment all must approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened through operations menu on approving the assignment with one user on using Assignment all must approve class.")
	public void SprintTest172015_3_68_1B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before approving : " + userList.length + "; After Approving : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after approving assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on approving assignment by one user in metadatacard opening through operations menu.");
			else
				Log.fail("Test case Failed. All Assignes are not available on approving assignment by one user in metadatacard opening through operations menu." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_1B

	/**
	 * 172015.3.68.1C : Other Assignees should be available in metadatacard opened through taskpanel menu on approving the assignment with one user on using Assignment all must approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened through taskpanel menu on approving the assignment with one user on using Assignment all must approve class.")
	public void SprintTest172015_3_68_1C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before approving : " + userList.length + "; After Approving : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after approving assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on approving assignment by one user in metadatacard opening through taskpanel menu.");
			else
				Log.fail("Test case Failed. All Assignes are not available on approving assignment by one user in metadatacard opening through taskpanel menu." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_1C

	/**
	 * 172015.3.68.1D : Other Assignees should be available in metadatacard opened in rightpane on approving the assignment with one user on using Assignment all must approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened in rightpane on approving the assignment with one user on using Assignment all must approve class.")
	public void SprintTest172015_3_68_1D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment in rightpane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened in rightpane.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickApproveIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Approve icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is approved by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened in rightpane.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before approving : " + userList.length + "; After Approving : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after approving assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on approving assignment by one user in metadatacard opening in rightpane.");
			else
				Log.fail("Test case Failed. All Assignes are not available on approving assignment by one user in metadatacard opening in rightpane." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_1D

	/**
	 * 172015.3.68.1E : Other Assignees should be available from metadatacard after approving the assignment with one user in taskpanel on using Assignment all must approve class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available from metadatacard after approving the assignment with one user in taskpanel on using Assignment all must approve class.")
	public void SprintTest172015_3_68_1E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Approve the assignment from taskpanel
			//----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Approve");

			if (!ListView.getMarkedAsCompleteByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is approved
				throw new Exception("Assignment (" + assigName + ") is not approved by user (" + userFullName + ").");

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Verification : Verify if copied assignment is in approved state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before approving : " + userList.length + "; After Approving : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after approving assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on approving assignment by one user in metadatacard opening in rightpane.");
			else
				Log.fail("Test case Failed. All Assignes are not available on approving assignment by one user in metadatacard opening in rightpane." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_1E

	/**
	 * 172015.3.68.2A : Other Assignees should be available in metadatacard opened through context menu on rejecting the assignment with one user on using Assignment all must Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened through context menu on rejecting the assignment with one user on using Assignment all must Reject class.")
	public void SprintTest172015_3_68_2A(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through context menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.rightClickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.listView.clickContextMenuItem(Caption.MenuItems.Properties.Value); //Open metadatacard through context menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through context menu.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before rejecting : " + userList.length + "; After rejecting : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after rejecting assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on rejecting assignment by one user in metadatacard opening through context menu.");
			else
				Log.fail("Test case Failed. All Assignes are not available on rejecting assignment by one user in metadatacard opening through context menu." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_2A

	/**
	 * 172015.3.68.2B : Other Assignees should be available in metadatacard opened through operations menu on rejecting the assignment with one user on using Assignment all must Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened through operations menu on rejecting the assignment with one user on using Assignment all must Reject class.")
	public void SprintTest172015_3_68_2B(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through operations menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.menuBar.ClickOperationsMenu(Caption.MenuItems.Properties.Value); //Open metadatacard through operations menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through operations menu.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before rejecting : " + userList.length + "; After rejecting : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after rejecting assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on rejecting assignment by one user in metadatacard opening through operations menu.");
			else
				Log.fail("Test case Failed. All Assignes are not available on rejecting assignment by one user in metadatacard opening through operations menu." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_2B

	/**
	 * 172015.3.68.2C : Other Assignees should be available in metadatacard opened through taskpanel menu on rejecting the assignment with one user on using Assignment all must Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened through taskpanel menu on rejecting the assignment with one user on using Assignment all must Reject class.")
	public void SprintTest172015_3_68_2C(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.clickItem(Caption.MenuItems.Properties.Value); //Open metadatacard through taskpanel menu

			metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before rejecting : " + userList.length + "; After rejecting : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after rejecting assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on rejecting assignment by one user in metadatacard opening through taskpanel menu.");
			else
				Log.fail("Test case Failed. All Assignes are not available on rejecting assignment by one user in metadatacard opening through taskpanel menu." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_2C

	/**
	 * 172015.3.68.2D : Other Assignees should be available in metadatacard opened in rightpane on rejecting the assignment with one user on using Assignment all must Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available in metadatacard opened in rightpane on rejecting the assignment with one user on using Assignment all must Reject class.")
	public void SprintTest172015_3_68_2D(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Open the Properties dialog of the new assignment in rightpane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened in rightpane.");

			//Step-4 : Mark Complete the newly created assignment
			//----------------------------------------------------
			if (!metadatacard.clickRejectIcon()) //Clicks Complete Assignment icon.
				throw new Exception("Reject icon is not clicked.");

			metadatacard.saveAndClose(); //Saves the metdatacard

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("4. Assignment (" + assigName + ") is Rejected by user (" + userFullName + ").", driver);

			//Step-5 : Open the Properties dialog of the new assignment through taskpanel menu
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("5. Metadatacard dialog of the new assignment (" + assigName + ") is opened in rightpane.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before rejecting : " + userList.length + "; After rejecting : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after rejecting assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on rejecting assignment by one user in metadatacard opening in rightpane.");
			else
				Log.fail("Test case Failed. All Assignes are not available on rejecting assignment by one user in metadatacard opening in rightpane." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_2D

	/**
	 * 172015.3.68.2E : Other Assignees should be available from metadatacard after rejecting the assignment with one user in taskpanel on using Assignment all must Reject class
	 */
	@Test(dataProviderClass = DataProviderUtils.class, dataProvider = "excelDataReader", groups = { "Sprint104"}, 
			description = "Other Assignees should be available from metadatacard after rejecting the assignment with one user in taskpanel on using Assignment all must Reject class.")
	public void SprintTest172015_3_68_2E(HashMap<String,String> dataValues, String driverType) throws Exception {

		driver = WebDriverUtils.getDriver();

		try {

			ConcurrentHashMap <String, String> dataPool = new ConcurrentHashMap <String, String>(dataValues);
			HomePage homePage = LoginPage.launchDriverAndLogin(driver, true); //Launched driver and logged in

			//Step-1 : Navigate to specified View
			//-----------------------------------
			String viewToNavigate = SearchPanel.searchOrNavigatetoView(driver, dataPool.get("NavigateToView"), "");

			Log.message("1. Navigated to '" + viewToNavigate + "' view.");

			//Step-2 : Select New Assignment from New menu
			//--------------------------------------------
			homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
			String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
			MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
			metadatacard.setPropertyValue("Class", Caption.Classes.AssignmentAllMustApprove.Value); //Sets the Class name
			metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
			metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property

			String[] userList = dataPool.get("AssignedUsers").split(",");

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++) //Assigned with multiple users. 
				metadatacard.setPropertyValue("Assigned to", userList[loopIdx].trim(), loopIdx+2); //Sets the assigned to property

			metadatacard.saveAndClose(); //Saves and Closes the metadatacard.

			if (!homePage.listView.isItemExists(assigName)) //Checks if Item exists in the list
				throw new Exception("Newly created assignment (" + assigName + ") does not exists in the list.");

			Log.message("2. New Assignment(" + assigName + ") is created with mutliple assigned to users and " + Caption.Classes.AssignmentAllMustApprove.Value + " class.");

			//Step-3 : Reject the assignment from taskpanel
			//----------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			homePage.taskPanel.markApproveReject("Reject");

			if (!ListView.getRejectedByItemName(driver, assigName).equalsIgnoreCase(userFullName)) //Checks if Assignment is Rejected
				throw new Exception("Assignment (" + assigName + ") is not Rejected by user (" + userFullName + ").");

			Log.message("3. Metadatacard dialog of the new assignment (" + assigName + ") is opened through taskpanel menu.");

			//Step-4 : Open the Properties dialog of the new assignment in right pane
			//-------------------------------------------------------------------------------
			if (!homePage.listView.clickItem(assigName)) //Right clicks the assignment
				throw new Exception("Newly created assignment (" + assigName + ") is not selected.");

			metadatacard = new MetadataCard(driver, true); //Instantiates Metadatacard wrapper

			Log.message("4. Metadatacard dialog of the new assignment (" + assigName + ") is opened in right pane.");

			//Verification : Verify if copied assignment is in Rejected state
			//----------------------------------------------------------
			ArrayList<String> assignedToValues = metadatacard.getPropertyValues("Assigned to");
			String addlInfo = "No of users before rejecting : " + userList.length + "; After rejecting : " + assignedToValues.size();

			if (assignedToValues.size() != userList.length)
				throw new Exception("Test case Failed. One or more assigned users are not listed after rejecting assignment by one user." + addlInfo);

			addlInfo = "";

			for (int loopIdx=0; loopIdx<userList.length; loopIdx++)
				if (!assignedToValues.contains(userList[loopIdx]))
					addlInfo = userList[loopIdx] + " is not available;"; 

			if (addlInfo.equals("")) //Checks if all the users are available
				Log.pass("Test case Passed. All Assignes are available on rejecting assignment by one user in metadatacard opening in rightpane.");
			else
				Log.fail("Test case Failed. All Assignes are not available on rejecting assignment by one user in metadatacard opening in rightpane." + addlInfo, driver);

		}
		catch (Exception e) {
			Log.exception(e, driver);
		} //End catch

		finally {
			Utility.quitDriver(driver);
		} //End finally

	} //End SprintTest172015_3_68_2E

	public List<String> createAssignments(WebDriver driver, int noOfObjs, String className) throws Exception {

		try {

			List<String> assignNames = new ArrayList<String>();

			for (int i=0; i<noOfObjs; i++) {
				HomePage homePage = new HomePage(driver);
				homePage.menuBar.clickNewMenuItem(Caption.ObjecTypes.Assignment.Value); //Clicks New Assignment from the menu bar
				String assigName =  Utility.getObjectName(methodName).toString(); //Name of the object with current method date & time
				MetadataCard metadatacard = new MetadataCard(driver); //Instantiates Metadatacard wrapper
				metadatacard.setPropertyValue("Class", className); //Sets the Assignment name
				metadatacard.setPropertyValue("Name or title", assigName); //Sets the Assignment name
				Utils.fluentWait(driver);
				metadatacard.setPropertyValue("Assigned to", userFullName); //Sets the assigned to property
				metadatacard.saveAndClose(); //Saves and Closes the metadatacard.
				assignNames.add(assigName);
			}

			return assignNames;

		}
		catch (Exception e) {
			throw e;
		}
	}

} //End Class Assignments